{"version":3,"sources":["components/Profit.jsx","components/Navbar.jsx","components/Blockplace.jsx","components/Fasttrack.jsx","App.js","index.js"],"names":["Profit","state","curdeposit","levelcost","overtake","fpwin","fielderror","remain","msg1","msg2","msgcolor","reward","bidcost","progressbar","calculateResults","_this$state","_this","isNaN","setState","Math","ceil","floor","handleChange","event","_event$target","target","name","value","intValue","parseInt","Object","defineProperty","classes","this","props","react_default","a","createElement","className","layout","index_es","paper","elevation","container","spacing","item","xs","variant","align","color","error","label","type","fullWidth","margin","onChange","react","es","progress","percent","strokeLinecap","trailWidth","strokeWidth","strokeColor","result","style","concat","direction","justify","info","Info_default","icon","Component","withStyles","theme","width","marginTop","unit","marginLeft","marginRight","breakpoints","up","marginBottom","padding","verticalAlign","Navbar","_this$props","handleClick","root","appBar","position","alignItems","flex","version","productLogo","button","onClick","flexGrow","display","borderLeft","palette","grey","paddingLeft","down","justifyContent","fontSize","fontStyle","Blockplace","myfp","bank","msg","msg3","msg1flag","msg3color","reachfp","reqfp","simfp","console","clear","inc","incamount","_this$state2","summary","infogrid","Fasttrack","bonus","totfpreq","reward1st","reward2nd","reward3rd","teamcont1","teamcont2","teamcont3","owncont1","owncont2","owncont3","remain1st","remain2nd","remain3rd","summessage","message","max","totcont","info2","table","size","component","scope","createMuiTheme","secondary","main","pink","primary","blue","typography","useNextVariants","App","loadpage","currentTarget","core_styles","CssBaseline_default","components_Navbar","components_Blockplace","components_Profit","components_Fasttrack","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.80f3705f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Profit extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    fielderror: false,\n    remain: 0,\n    msg1: '',\n    msg2: false,\n    msgcolor: '#000000',\n    reward: 0,\n    bidcost: 0,\n    progressbar: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let bidcost = (Math.ceil((remain + overtake) / 2));\n    let reward = Math.floor(fpwin * 1.9);\n    this.setState({reward});\n    this.setState({bidcost});\n    if (remain > bidcost) {\n      if (reward > bidcost) {\n        this.setState({\n          msg1: 'There will be a profit of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#177e0e',\n          msg2: true\n        })\n      } else if (reward === bidcost) {\n        this.setState({\n          msg1: 'No profit nor loss on this transaction',\n          msgcolor: '#fed029',\n          msg2: true\n        })\n      } else {\n        this.setState({\n          msg1: 'There will be a loss of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#b70431',\n          msg2: true\n        });\n      }\n    } else {\n      // There is still a small chance that the player win while leveling the GB\n      this.setState({ msg1: 'Player can\\'t win',\n        msgcolor: '#b70431',\n        msg2: false\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    this.setState({ msg1: '' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Profit Calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Amount to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='butt'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#215d1b'\n                  />\n                  {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.remain}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;\n                      {this.state.overtake}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.reward) && (this.state.reward!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Reward (Arc bonus applied):\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.reward}\n                    </Typography>\n                  }\n                  {(this.state.msg1 !== '') &&\n                    <Fragment>\n                      <Typography className={classes.result} variant='body1' align='left' >\n                        <strong>Results: </strong>\n                      </Typography>\n                      {(this.state.msg2) &&\n                        <Typography>\n                          The player will need to invest {this.state.bidcost} FP while gaining {this.state.reward} FP.\n                        </Typography>\n                      }\n                      <Typography variant='body1' align='left' >\n                        <strong><span style={{ color: `${this.state.msgcolor}` }}>{this.state.msg1}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Result is calculated based on the investing player owning a level 80 Arc\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Profit);","import React, { Component } from 'react';\n\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  version: {\n    fontSize: '14px',\n    fontStyle: 'italic'\n  }\n});\n\n\nclass Navbar extends Component {\n\n  render() {\n    const { classes, handleClick } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position='static' color='primary'>\n          <Grid container spacing={24} alignItems='baseline'>\n          <Grid item xs={12} className={classes.flex}>\n            <Toolbar>\n              <Typography variant='h6' color='inherit'>\n                <strong>Fabou's FoE Tools</strong> <span className={classes.version}> v1.2</span>\n              </Typography>\n              <div className={classes.productLogo}>\n                <Typography color='inherit'>\n                  Hopefully useful... &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </Typography>\n              </div>\n              <Button\n                name=\"secure\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Secure Place\n              </Button>\n              <Button\n                name=\"profit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Profit Calc\n              </Button>\n              <Button\n                name=\"fasttk\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                GB FastTrack\n              </Button>\n            </Toolbar>\n          </Grid>\n          </Grid>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n\n\n\n","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 5\n  },\n  summary: {\n    marginLeft: 10\n  },\n  infogrid: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  }\n});\n\n\nclass Blockplace extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    myfp: 0,\n    bank: 0,\n    fielderror: false,\n    remain: 0,\n    msg: '',\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg1flag: false, // True if win, lose or stale. False if player can't win\n    msgcolor: '#000000',\n    msg3color: '#000000',\n    reachfp: 0,\n    progressbar: 0,\n    reqfp: 0,\n    simfp: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost, myfp, bank } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (isNaN(myfp)) myfp = 0;\n    if (isNaN(bank)) bank = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let reachfp = (Math.ceil((remain + overtake) / 2));\n    this.setState({reachfp});\n    // Checking if the player can secure the place\n    // If the player can secure the place then it can be a win, loss or stale on FP spending\n    let simfp;\n    console.clear();\n    if (myfp > (overtake + remain)) {\n      this.setState({\n        msg: 'Your place is already secured you don\\'t need to put any more FP'\n      });\n    } else {\n      for (var inc = 1; inc <= remain; inc++) {\n        simfp = myfp + inc ;\n        if (simfp >= (overtake + (remain - inc))) {\n          if ((simfp === overtake) && (inc === remain )) {\n            this.setState({ msg1: 'You can\\'t secure the place',\n            msgcolor: '#b70431',\n            msg1flag: false\n            });\n            break;\n          } else {\n            this.setState({simfp});\n            this.setState({\n              msg: 'To secure the place, you will need to reach a total of ' + simfp + ' FP'\n            });\n            // Checking for win, loss or stale\n            if (fpwin !==0) {\n              var reqfp = simfp - myfp; // required FP to win\n              this.setState({reqfp});\n              if (fpwin > reqfp) {\n                this.setState({\n                  msg1: 'You will win ' + (fpwin - reqfp) + ' FP on this transaction',\n                  msgcolor: '#177e0e',\n                  msg1flag: true\n                });\n              } else if (fpwin < reqfp) {\n                this.setState({\n                  msg1: 'If you secure the place you will lose ' + (reqfp - fpwin )+ ' FP',\n                  msgcolor: '#b70431',\n                  msg1flag: true\n                });\n              } else {\n                this.setState({\n                  msg1: 'You will not lose or gain any FP if you secure the place',\n                  msgcolor: '#fed029',\n                  msg1flag: true\n                });\n              }\n            }\n            break;\n          }\n        } else if (myfp + remain <= overtake) {\n          this.setState({ msg1: 'You can\\'t secure the place',\n          msgcolor: '#b70431',\n          msg1flag: false\n          });\n          break;\n        }\n      } // For loop\n    }\n    // Checking for inventory and bank additional information\n    if (bank === 0) {\n      this.setState({\n        msg2: 'With 0 FP in the bank the whole amout will need to come from inventory'\n      });\n    } else if (bank >= reqfp) {\n      this.setState({\n        msg2: 'You don\\'t need to take any FP from inventory'\n      });\n    } else {\n      this.setState({\n        msg2: 'You will need to take out ' + (reqfp - bank) + ' FP from inventory'\n      });\n    }\n    if ((reqfp - (bank + fpwin) > 0)) {\n      this.setState({\n        msg3: 'Your inventory will decrease by ' + (reqfp - (bank + fpwin)) + ' FP' ,\n        msg3color: '#b70431',\n        });\n    } else if ((reqfp - (bank + fpwin) === 0)) {\n      this.setState({\n        msg3: 'Your inventory will remain the same' ,\n        msg3color: '#fed029',\n      });\n    } else {\n      if (fpwin !== 0) {\n        var incamount;\n        if (bank >= reqfp) {\n          incamount = fpwin;\n        } else {\n          incamount = (fpwin - (reqfp - bank));\n        }\n        this.setState({\n          msg3: 'Inventory will increase by ' + incamount + ' FP' ,\n          msg3color: '#177e0e',\n        });\n      }\n    }\n  } // calculateResults\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n       * current deposit can't be smaller than (my invested FP + overtake)\n    */\n    this.setState({ msg:'', msg1: '', msg2: '', msg3:'' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    /*   TODO:\n       * Implement tooltips on summary fields (help for usage)\n    */\n    const { classes } = this.props;\n    const { reqfp, simfp, bank, msg, msg1, msg2, msg3 } = this.state;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Secure (Block) place\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Player to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.myfp}\n                name='myfp'\n                label='My invested FP'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={bank}\n                name='bank'\n                label='Amount in the Bank'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>   { /* Summary  */ }\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='square'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#47933f'\n                  />\n                </Fragment>\n              }\n            </Grid>\n            <Grid container spacing={0}>\n              {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.remain}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.overtake}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.fpwin) && (this.state.fpwin!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Targeted place reward:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.fpwin}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.myfp) && (this.state.myfp!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      My currently invested FP:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.myfp}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(bank) && (bank!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Availaible FP in my bank:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {bank}\n                  </Typography>\n                  </Grid>\n                </Fragment>\n              }\n            </Grid>   {/* container */}\n            <Grid item xs={12}>   {/* Result */}\n              {((msg !== '') || (msg1!=='')) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Results: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='left' >\n                    {msg}\n                  </Typography>\n                  {(msg1 !== '') &&\n                    <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msgcolor}` }}>{msg1}</span></strong>\n                    </Typography>\n                  }\n                </Fragment>\n              }\n            </Grid>\n            <Grid item xs={12}>   {/* Additional Info */}\n              {(msg1 !== '' && (this.state.msg1flag)) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Additional info: </strong>\n                  </Typography>\n                  {(this.state.msg1flag) &&\n                    <Typography variant='body1' align='left'>\n                      You need to invest {reqfp} more FP to reach the required {simfp} FP\n                    </Typography>\n                  }\n                  {(msg2!=='') &&\n                    <Fragment>\n                      <Typography variant='body1' align='left' >\n                        {msg2}\n                      </Typography>\n                      <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msg3color}` }}>{msg3}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container className={classes.infogrid} spacing={0}>\n            <Grid item  xs={1} >\n              <Typography align='center' color='secondary'>\n                <Info />\n              </Typography>\n            </Grid>\n            <Grid item xs={11} >\n              <Typography align='left' color='secondary'>\n                It is assumed that the player has not used any FP from inventory previously\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Blockplace);","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Fasttrack extends Component {\n  state = {\n    bonus: 1.8,\n    totfpreq: 0,\n    reward1st: 0,\n    reward2nd: 0,\n    reward3rd: 0,\n    teamcont1: 0,\n    teamcont2: 0,\n    teamcont3: 0,\n    owncont1: 0,\n    owncont2: 0,\n    owncont3: 0,\n    remain1st: 0,\n    remain2nd: 0,\n    remain3rd: 0,\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    summessage: '',\n    fielderror: false,\n    msgcolor: '#000000',\n  }\n\n\n  calculateResults = () => {\n    let { bonus, totfpreq, reward1st, reward2nd, reward3rd } = this.state;\n    var teamcont1, owncont1, remain1st;\n    var teamcont2, owncont2, remain2nd;\n    var teamcont3, owncont3, remain3rd;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(totfpreq)) totfpreq = 0;\n    if (isNaN(reward1st)) reward1st = 0;\n    if (isNaN(reward2nd)) reward2nd = 0;\n    if (isNaN(reward3rd)) reward3rd = 0;\n    // Resetting all messages\n    this.setState({ msg1: '', msg2:'', msg3:'', summessage: '' })\n    if (reward1st>0) {\n      teamcont1 = Math.ceil(reward1st * bonus);\n      owncont1 = Math.max(0, (totfpreq - (2 * teamcont1)));\n      remain1st = totfpreq - (teamcont1 + owncont1);\n      let effi = Math.ceil((owncont1 / totfpreq) * 100)\n      let message = '1st place:  Myself=' + owncont1 + ',   Guildmate=' + teamcont1 + ',    Remaining FP=' + remain1st;\n      let summessage = 'With only 1st place open the total contribution by owner will be ' + owncont1 + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain1st + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont1: teamcont1, owncont1: owncont1, remain1st: remain1st, msg1: message, summessage: summessage });\n    }\n    if (reward2nd>0) {\n      teamcont2 = Math.ceil(reward2nd * bonus);\n      owncont2 = Math.max(0, (remain1st - (2 * teamcont2)));\n      remain2nd = remain1st - (teamcont2 + owncont2);\n      let totcont = owncont1 + owncont2;\n      let effi = Math.ceil((totcont / totfpreq) * 100)\n      let message = '2nd place:  Myself=' + owncont2 + ',  Guildmate=' + teamcont2 + ',  Remaining FP=' + remain2nd;\n      let summessage = 'With 1st and 2nd places open the total contribution by owner will be ' + totcont + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain2nd + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont2: teamcont2, owncont2: owncont2, remain2nd: remain2nd, msg2: message, summessage: summessage });\n    }\n    if (reward3rd>0) {\n      teamcont3 = Math.ceil(reward3rd * bonus);\n      owncont3 = Math.max(0, (remain2nd - (2 * teamcont3)));\n      remain3rd = remain2nd - (teamcont3 + owncont3);\n      let totcont = owncont1 + owncont2 + owncont3;\n      let effi = Math.ceil((totcont / totfpreq) * 100)\n      let message = '3rd place:  Myself=' + owncont3 + ',  Guildmate=' + teamcont3 + ',  Remaining FP=' + remain3rd;\n      let summessage = 'With 1st, 2nd and 3rd places open the total contribution by owner will be ' + totcont + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain3rd + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont3: teamcont3, owncont3: owncont3, remain3rd: remain3rd, msg3: message, summessage: summessage });\n    }\n  }\n\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.reward1st >= this.state.totfpreq) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.calculateResults();\n\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                GB FastTrack Calc\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n               Owner must make their contribution BEFORE posting and contribution must be direct from their supplies/collections (not from swap threads)\n              </Typography>\n              <Typography className={classes.info2} variant='subtitle2'>\n                If you are not familiar with GB FastTrack process read explantion on the guild forum.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={this.state.totfpreq}\n                error={this.state.fielderror}\n                name='totfpreq'\n                label='Total FP required'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward1st}\n                error={this.state.fielderror}\n                name='reward1st'\n                label='1st place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward2nd}\n                name='reward2nd'\n                label='2nd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward3rd}\n                name='reward3rd'\n                label='3rd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"right\">Rewards</TableCell>\n                        <TableCell align=\"right\">Guild contrib</TableCell>\n                        <TableCell align=\"right\">Owner contrib</TableCell>\n                        <TableCell align=\"right\">Remain FP to level</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableHead>\n                <TableBody>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">1st place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward1st}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont1}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont1}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain1st}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">2nd place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward2nd}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont2}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont2}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain2nd}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">3rd place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward3rd}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont3}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont3}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain3rd}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableBody>\n              </Table>\n            </Grid>\n\n            <Grid item xs={12}>\n              {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                !isNaN(this.state.reward1st) && this.state.reward1st!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography>{this.state.summessage}</Typography>\n                  <Typography className={classes.result}>\n                  Copy and paste the following into the guild 1.8 thread after posting your GB\n                  </Typography>\n                  <Typography className={classes.info2}>\n                    I am opening the following places on my GB posted above:\n                    <br></br>\n                    &nbsp;&nbsp;{this.state.msg1}<br></br>\n                    &nbsp;&nbsp;{this.state.msg2}<br></br>\n                    &nbsp;&nbsp;{this.state.msg3}<br></br>\n                  </Typography>\n                </Fragment>\n              }\n            </Grid>\n\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Contributions are all based on 1.8 rate (Arc 60+ required to make profit). Figures will be correct only for GBs that are clear of FPs when starting.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Fasttrack);","import React, { Component, Fragment } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors'\n\nimport Profit from './components/Profit';\nimport Navbar from './components/Navbar';\nimport Blockplace from './components/Blockplace';\nimport Fasttrack from './components/Fasttrack';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: { main: pink[400] },\n    primary: { main: blue[600] },\n  },\n  typography: {\n    useNextVariants: true,\n }\n});\n\n\nclass App extends Component {\n  state = {\n    loadpage: 'secure'\n  }\n\n  handleClick = (event) => {\n    const { name } = event.currentTarget;\n    if (name === 'secure') {\n      this.setState({ loadpage: 'secure' });\n    };\n    if (name === 'profit') {\n      this.setState({ loadpage: 'profit' });\n    };\n    if (name === 'fasttk') {\n      this.setState({ loadpage: 'fasttk' });\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navbar handleClick={this.handleClick} />\n          { (this.state.loadpage === 'secure') &&\n            <Blockplace />\n          }\n          { (this.state.loadpage === 'profit') &&\n            <Profit />\n          }\n          { (this.state.loadpage === 'fasttk') &&\n            <Fasttrack />\n          }\n        </MuiThemeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}