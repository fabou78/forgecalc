{"version":3,"sources":["components/Profit.jsx","components/Navbar.jsx","components/Blockplace.jsx","App.js","index.js"],"names":["Profit","state","curdeposit","levelcost","overtake","fpwin","fielderror","remain","msg1","msg2","msgcolor","reward","bidcost","progressbar","calculateResults","_this$state","_this","isNaN","setState","Math","ceil","floor","handleChange","event","_event$target","target","name","value","intValue","parseInt","Object","defineProperty","classes","this","props","react_default","a","createElement","className","layout","index_es","paper","elevation","container","spacing","item","xs","variant","align","color","error","label","type","fullWidth","margin","onChange","react","es","progress","percent","strokeLinecap","trailWidth","strokeWidth","strokeColor","result","style","concat","direction","justify","info","Info_default","icon","Component","Navbar","withStyles","theme","width","marginTop","unit","marginLeft","marginRight","breakpoints","up","marginBottom","padding","verticalAlign","root","appBar","position","alignItems","flex","productLogo","button","flexGrow","display","borderLeft","palette","grey","paddingLeft","down","justifyContent","Blockplace","myfp","msgflag","bank","createMuiTheme","secondary","main","pink","primary","blue","typography","useNextVariants","App","core_styles","CssBaseline_default","components_Navbar","components_Blockplace","ReactDOM","render","src_App","document","getElementById"],"mappings":"6RA+CMA,6MACJC,MAAQ,CACNC,WAAY,EACZC,UAAW,EACXC,SAAU,EACVC,MAAO,EACPC,YAAY,EACZC,OAAQ,EACRC,KAAM,GACNC,MAAM,EACNC,SAAU,UACVC,OAAQ,EACRC,QAAS,EACTC,YAAa,KAGfC,iBAAmB,WAAM,IAAAC,EACkCC,EAAKf,MAAxDM,EADiBQ,EACjBR,OAAQH,EADSW,EACTX,SAAUC,EADDU,EACCV,MAAOH,EADRa,EACQb,WAAYC,EADpBY,EACoBZ,UAEvCc,MAAMV,KAASA,EAAS,GACxBU,MAAMb,KAAWA,EAAW,GAC5Ba,MAAMZ,KAAQA,EAAQ,GACtBY,MAAMf,KAAaA,EAAa,GAChCe,MAAMd,KAAYA,EAAY,GAC9BA,EAAU,GAAKD,EAAW,EAC5Bc,EAAKE,SAAS,CAACL,YAAaM,KAAKC,KAAMlB,EAAaC,EAAW,OAE/Da,EAAKE,SAAS,CAACL,YAAa,IAE9B,IAAID,EAAWO,KAAKC,MAAMb,EAASH,GAAY,GAC3CO,EAASQ,KAAKE,MAAc,IAARhB,GACxBW,EAAKE,SAAS,CAACP,WACfK,EAAKE,SAAS,CAACN,YACXL,EAASK,EACPD,EAASC,EACXI,EAAKE,SAAS,CACZV,KAAM,8BAAgCG,EAASC,GAAW,SAC1DF,SAAU,UACVD,MAAM,IAECE,IAAWC,EACpBI,EAAKE,SAAS,CACZV,KAAM,yCACNE,SAAU,UACVD,MAAM,IAGRO,EAAKE,SAAS,CACZV,KAAM,4BAA8BG,EAASC,GAAW,SACxDF,SAAU,UACVD,MAAM,IAKVO,EAAKE,SAAS,CAAEV,KAAM,mBACpBE,SAAU,UACVD,MAAM,OAKZa,aAAe,SAACC,GAKdP,EAAKE,SAAS,CAAEV,KAAM,KALE,IAAAgB,EAMAD,EAAME,OAAtBC,EANgBF,EAMhBE,KAAMC,EANUH,EAMVG,MACVC,EAAWC,SAASF,EAAO,IAC3BC,EAAW,IAAGA,EAAW,GAC7BZ,EAAKE,SAALY,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EAAOE,GACP,WACGZ,EAAKf,MAAMC,YAAcc,EAAKf,MAAME,UACtCa,EAAKE,SAAS,CAAEZ,YAAY,KAE5BU,EAAKE,SAAS,CAAEZ,YAAY,IAC5BU,EAAKE,SAAS,CAAEX,OAASS,EAAKf,MAAME,UAAYa,EAAKf,MAAMC,YAAe,WACxEc,EAAKF,iGAMJ,IACCkB,EAAYC,KAAKC,MAAjBF,QACR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,QACtBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOF,UAAWN,EAAQS,MAAOC,UAAW,GAC1CP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,IACvBT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,KAAKC,MAAM,SAASC,MAAM,WAA9C,sBAIFd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMC,WAClBgD,MAAOjB,KAAKhC,MAAMK,WAClBoB,KAAK,aACLyB,MAAM,mBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAME,UAClB+C,MAAOjB,KAAKhC,MAAMK,WAClBoB,KAAK,YACLyB,MAAM,mBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMG,SAClBsB,KAAK,WACLyB,MAAM,qBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMI,MAClBqB,KAAK,QACLyB,MAAM,wBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACa,IAAxBb,KAAKhC,MAAMC,YAAyC,IAAvB+B,KAAKhC,MAAME,YAAyC,IAAxB8B,KAAKhC,MAAMK,YACpE6B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAChCb,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,UAC/Bf,KAAKhC,MAAMC,WADd,MAC6B+B,KAAKhC,MAAME,WAExCgC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEnB,UAAWN,EAAQ0B,SACnBC,QAAS1B,KAAKhC,MAAMY,YACpB+C,cAAc,OACdC,WAAW,IACXC,YAAY,IACZC,YAAY,aAEX9C,MAAMgB,KAAKhC,MAAMM,SAAgC,IAApB0B,KAAKhC,MAAMM,QACzC4B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,sFAIGf,KAAKhC,MAAMM,SAGbU,MAAMgB,KAAKhC,MAAMG,WAAoC,IAAtB6B,KAAKhC,MAAMG,UAC3C+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,iEAIGf,KAAKhC,MAAMG,WAGba,MAAMgB,KAAKhC,MAAMU,SAAgC,IAApBsB,KAAKhC,MAAMU,QACzCwB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,4EAIGf,KAAKhC,MAAMU,QAGM,KAApBsB,KAAKhC,MAAMO,MACX2B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYF,UAAWN,EAAQgC,OAAQjB,QAAQ,QAAQC,MAAM,QAC3Db,EAAAC,EAAAC,cAAA,4BAEAJ,KAAKhC,MAAMQ,MACX0B,EAAAC,EAAAC,cAACG,EAAA,EAAD,uCACkCP,KAAKhC,MAAMW,QAD7C,qBACwEqB,KAAKhC,MAAMU,OADnF,QAIFwB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAChCb,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,QAAM4B,MAAO,CAAEhB,MAAK,GAAAiB,OAAKjC,KAAKhC,MAAMS,YAAeuB,KAAKhC,MAAMO,YAzGtF,IAiHE2B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,EAAGuB,UAAU,MAAMC,QAAQ,cAClDjC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACP,UAAWN,EAAQqC,KAAMvB,GAAI,IACtCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYS,MAAM,aAChBd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAME,UAAWN,EAAQuC,OACzBpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQuC,MAAzB,mFArHR,aAzFaC,aCffC,GDyOSC,qBA/PA,SAAAC,GAAK,MAAK,CACvBpC,OAAOT,OAAAC,EAAA,EAAAD,CAAA,CACL8C,MAAO,OACPC,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBC,WAAiC,EAArBJ,EAAM/B,QAAQkC,KAC1BE,YAAkC,EAArBL,EAAM/B,QAAQkC,MAC1BH,EAAMM,YAAYC,GAAG,IAA2B,EAArBP,EAAM/B,QAAQkC,KAAW,GAAK,CACxDF,MAAO,IACPG,WAAY,OACZC,YAAa,SAGjBvC,MAAMX,OAAAC,EAAA,EAAAD,CAAA,CACJ+C,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBK,aAAmC,EAArBR,EAAM/B,QAAQkC,KAC5BM,QAA8B,EAArBT,EAAM/B,QAAQkC,MACtBH,EAAMM,YAAYC,GAAG,IAA2B,EAArBP,EAAM/B,QAAQkC,KAAW,GAAK,CACxDD,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBK,aAAmC,EAArBR,EAAM/B,QAAQkC,KAC5BM,QAA8B,EAArBT,EAAM/B,QAAQkC,OAG3Bd,OAAQ,CACNa,UAAW,IAEbR,KAAM,CACJQ,UAAW,IAEbnB,SAAU,CACRyB,aAAc,IAEhBZ,KAAM,CACJc,cAAe,YA+NJX,CAAmB1E,oLCvOvB,IACCgC,EAAYC,KAAKC,MAAjBF,QACR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQsD,MACtBnD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQF,UAAWN,EAAQuD,OAAQC,SAAS,SAASvC,MAAM,WACzDd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GAAI6C,WAAW,YACxCtD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIR,UAAWN,EAAQ0D,MACpCvD,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,KAAKE,MAAM,WAC7Bd,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQ2D,aACtBxD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYS,MAAM,WAAlB,kDAIFd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,QAAQ,YAAYE,MAAM,YAAYX,UAAWN,EAAQ4D,QAAjE,eACAzD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,QAAQ,YAAYE,MAAM,YAAYX,UAAWN,EAAQ4D,QAAjE,4BAnBOpB,cA6BNE,uBAxDA,SAAAC,GAAK,MAAK,CACvBW,KAAM,CACJO,SAAU,GAEZN,OAAQ,CACNC,SAAU,YAEZG,YAAa,CACXG,QAAS,eACTC,WAAU,aAAA7B,OAAeS,EAAMqB,QAAQC,KAAd,MACzBlB,WAAY,GACZmB,YAAa,IAEfR,KAAK5D,OAAAC,EAAA,EAAAD,CAAA,CACHgE,QAAS,QACRnB,EAAMM,YAAYkB,KAAK,MAAQ,CAC9BL,QAAS,OACTM,eAAgB,eAChBX,WAAY,WAGhBG,OAAQ,CACNtC,OAAQqB,EAAM/B,QAAQkC,QAkCXJ,CAAmBD,GCd5B4B,6MACJpG,MAAQ,CACNC,WAAY,EACZC,UAAW,EACXC,SAAU,EACVC,MAAO,EACPiG,KAAM,EACNhG,YAAY,EACZC,OAAQ,EACRC,KAAM,GACN+F,SAAS,EACT7F,SAAU,UACVC,OAAQ,EACRC,QAAS,EACT4F,KAAM,EACN3F,YAAa,KAGfC,iBAAmB,WAAM,IAAAC,EACwCC,EAAKf,MAA9DM,EADiBQ,EACjBR,OAAQH,EADSW,EACTX,SAAUC,EADDU,EACCV,MAAOH,EADRa,EACQb,WAAYC,EADpBY,EACoBZ,UAAWmG,EAD/BvF,EAC+BuF,KAElDrF,MAAMV,KAASA,EAAS,GACxBU,MAAMb,KAAWA,EAAW,GAC5Ba,MAAMZ,KAAQA,EAAQ,GACtBY,MAAMf,KAAaA,EAAa,GAChCe,MAAMd,KAAYA,EAAY,GAC9Bc,MAAMqF,KAAOA,EAAO,GACpBnG,EAAU,GAAKD,EAAW,EAC5Bc,EAAKE,SAAS,CAACL,YAAaM,KAAKC,KAAMlB,EAAaC,EAAW,OAE/Da,EAAKE,SAAS,CAACL,YAAa,IAE9B,IAAID,EAAWO,KAAKC,MAAMb,EAASH,EAAWkG,GAAQ,GAGtDtF,EAAKE,SAAS,CAACN,YAEVA,EAAUL,GAAgBK,EAAU0F,EAAQlG,EAAWG,EAASK,EACnEI,EAAKE,SAAS,CAAEV,KAAM,2BACpBE,SAAU,UACV6F,SAAS,IAGE,IAATlG,IACEA,EAAQO,EACVI,EAAKE,SAAS,CACZV,KAAM,iBAAmBH,EAAQO,GAAW,0BAC5CF,SAAU,UACV6F,SAAS,IAEFlG,EAAQO,EACjBI,EAAKE,SAAS,CACZV,KAAM,kBAAoBI,EAAUP,GAAS,0BAC7CK,SAAU,UACV6F,SAAS,IAGXvF,EAAKE,SAAS,CACZV,KAAM,yCACNE,SAAU,UACV6F,SAAS,QAqCnBjF,aAAe,SAACC,GAMdP,EAAKE,SAAS,CAAEV,KAAM,KANE,IAAAgB,EAOAD,EAAME,OAAtBC,EAPgBF,EAOhBE,KAAMC,EAPUH,EAOVG,MACVC,EAAWC,SAASF,EAAO,IAC3BC,EAAW,IAAGA,EAAW,GAC7BZ,EAAKE,SAALY,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EAAOE,GACP,WACGZ,EAAKf,MAAMC,YAAcc,EAAKf,MAAME,UACtCa,EAAKE,SAAS,CAAEZ,YAAY,KAE5BU,EAAKE,SAAS,CAAEZ,YAAY,IAC5BU,EAAKE,SAAS,CAAEX,OAASS,EAAKf,MAAME,UAAYa,EAAKf,MAAMC,YAAe,WACxEc,EAAKF,iGAMJ,IACCkB,EAAYC,KAAKC,MAAjBF,QACR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,QACtBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOF,UAAWN,EAAQS,MAAOC,UAAW,GAC1CP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,IACvBT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,KAAKC,MAAM,SAASC,MAAM,WAA9C,yBAIFd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMC,WAClBgD,MAAOjB,KAAKhC,MAAMK,WAClBoB,KAAK,aACLyB,MAAM,mBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAME,UAClB+C,MAAOjB,KAAKhC,MAAMK,WAClBoB,KAAK,YACLyB,MAAM,mBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMG,SAClBsB,KAAK,WACLyB,MAAM,qBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMqG,KAClB5E,KAAK,OACLyB,MAAM,iBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMI,MAClBqB,KAAK,QACLyB,MAAM,wBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOM,KAAKhC,MAAMuG,KAClB9E,KAAK,OACLyB,MAAM,qBACNC,KAAK,SACLC,WAAS,EACTC,OAAO,SACPC,SAAUtB,KAAKX,gBAGnBa,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACa,IAAxBb,KAAKhC,MAAMC,YAAyC,IAAvB+B,KAAKhC,MAAME,YAAyC,IAAxB8B,KAAKhC,MAAMK,YACpE6B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAChCb,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,UAC/Bf,KAAKhC,MAAMC,WADd,MAC6B+B,KAAKhC,MAAME,WAExCgC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEnB,UAAWN,EAAQ0B,SACnBC,QAAS1B,KAAKhC,MAAMY,YACpB+C,cAAc,OACdC,WAAW,IACXC,YAAY,IACZC,YAAY,aAEX9C,MAAMgB,KAAKhC,MAAMM,SAAgC,IAApB0B,KAAKhC,MAAMM,QACzC4B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,sFAIGf,KAAKhC,MAAMM,SAGbU,MAAMgB,KAAKhC,MAAMG,WAAoC,IAAtB6B,KAAKhC,MAAMG,UAC3C+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,iEAIGf,KAAKhC,MAAMG,WAGba,MAAMgB,KAAKhC,MAAMqG,OAA4B,IAAlBrE,KAAKhC,MAAMqG,MACvCnE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,8FAIGf,KAAKhC,MAAMqG,OAGbrF,MAAMgB,KAAKhC,MAAMI,QAA8B,IAAnB4B,KAAKhC,MAAMI,OACxC8B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,6JAMGf,KAAKhC,MAAMI,QAGbY,MAAMgB,KAAKhC,MAAMuG,OAA4B,IAAlBvE,KAAKhC,MAAMuG,MACvCrE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,8FAIGf,KAAKhC,MAAMuG,MAGM,KAApBvE,KAAKhC,MAAMO,MACX2B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYF,UAAWN,EAAQgC,OAAQjB,QAAQ,QAAQC,MAAM,QAC3Db,EAAAC,EAAAC,cAAA,4BAEAJ,KAAKhC,MAAMsG,SACXpE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,2BAC2Bf,KAAKhC,MAAMW,QADtC,4BAIFuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAChCb,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,QAAM4B,MAAO,CAAEhB,MAAK,GAAAiB,OAAKjC,KAAKhC,MAAMS,YAAeuB,KAAKhC,MAAMO,SAErES,MAAMgB,KAAKhC,MAAMuG,OAA4B,IAAlBvE,KAAKhC,MAAMuG,MACvCrE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYO,QAAQ,QAAQC,MAAM,QAAlC,yBAC2Bf,KAAKhC,MAAMW,QAAUqB,KAAKhC,MAAMuG,KAD3D,qCApJhB,IA8JErE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,EAAGuB,UAAU,MAAMC,QAAQ,cAClDjC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,EAACP,UAAWN,EAAQqC,KAAMvB,GAAI,IACtCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYS,MAAM,aAChBd,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAME,UAAWN,EAAQuC,OACzBpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQuC,MAAzB,qCAlKR,aA7HiBC,aA2SVE,uBAhVA,SAAAC,GAAK,MAAK,CACvBpC,OAAOT,OAAAC,EAAA,EAAAD,CAAA,CACL8C,MAAO,OACPC,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBC,WAAiC,EAArBJ,EAAM/B,QAAQkC,KAC1BE,YAAkC,EAArBL,EAAM/B,QAAQkC,MAC1BH,EAAMM,YAAYC,GAAG,IAA2B,EAArBP,EAAM/B,QAAQkC,KAAW,GAAK,CACxDF,MAAO,IACPG,WAAY,OACZC,YAAa,SAGjBvC,MAAMX,OAAAC,EAAA,EAAAD,CAAA,CACJ+C,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBK,aAAmC,EAArBR,EAAM/B,QAAQkC,KAC5BM,QAA8B,EAArBT,EAAM/B,QAAQkC,MACtBH,EAAMM,YAAYC,GAAG,IAA2B,EAArBP,EAAM/B,QAAQkC,KAAW,GAAK,CACxDD,UAAgC,EAArBF,EAAM/B,QAAQkC,KACzBK,aAAmC,EAArBR,EAAM/B,QAAQkC,KAC5BM,QAA8B,EAArBT,EAAM/B,QAAQkC,OAG3Bd,OAAQ,CACNa,UAAW,IAEbR,KAAM,CACJQ,UAAW,IAEbnB,SAAU,CACRyB,aAAc,IAEhBZ,KAAM,CACJc,cAAe,YAgTJX,CAAmB2B,GC/U5B1B,EAAQ8B,yBAAe,CAC3BT,QAAS,CACPU,UAAW,CAAEC,KAAMC,OAAK,MACxBC,QAAS,CAAEF,KAAMG,OAAK,OAExBC,WAAY,CACVC,iBAAiB,KAmBNC,mLAZX,OACE9E,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAAC6E,EAAA,iBAAD,CAAkBvC,MAAOA,GACvBxC,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,MACAD,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,eAPQ7C,aChBlB8C,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cab97448.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Profit extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    fielderror: false,\n    remain: 0,\n    msg1: '',\n    msg2: false,\n    msgcolor: '#000000',\n    reward: 0,\n    bidcost: 0,\n    progressbar: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let bidcost = (Math.ceil((remain + overtake) / 2));\n    let reward = Math.floor(fpwin * 1.9);\n    this.setState({reward});\n    this.setState({bidcost});\n    if (remain > bidcost) {\n      if (reward > bidcost) {\n        this.setState({\n          msg1: 'There will be a profit of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#177e0e',\n          msg2: true\n        })\n      } else if (reward === bidcost) {\n        this.setState({\n          msg1: 'No profit nor loss on this transaction',\n          msgcolor: '#fed029',\n          msg2: true\n        })\n      } else {\n        this.setState({\n          msg1: 'There will be a loss of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#b70431',\n          msg2: true\n        });\n      }\n    } else {\n      // There is still a small chance that the player win while leveling the GB\n      this.setState({ msg1: 'Player can\\'t win',\n        msgcolor: '#b70431',\n        msg2: false\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    this.setState({ msg1: '' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Profit Calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Amount to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='butt'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#215d1b'\n                  />\n                  {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.remain}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;\n                      {this.state.overtake}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.reward) && (this.state.reward!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Reward (Arc bonus applied):\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.reward}\n                    </Typography>\n                  }\n                  {(this.state.msg1 !== '') &&\n                    <Fragment>\n                      <Typography className={classes.result} variant='body1' align='left' >\n                        <strong>Results: </strong>\n                      </Typography>\n                      {(this.state.msg2) &&\n                        <Typography>\n                          The player will need to invest {this.state.bidcost} FP while gaining {this.state.reward} FP.\n                        </Typography>\n                      }\n                      <Typography variant='body1' align='left' >\n                        <strong><span style={{ color: `${this.state.msgcolor}` }}>{this.state.msg1}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Result is calculated based on the investing player owning a level 80 Arc\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Profit);","import React, { Component } from 'react';\n\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\n\nclass Navbar extends Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position='static' color='primary'>\n          <Grid container spacing={24} alignItems='baseline'>\n          <Grid item xs={12} className={classes.flex}>\n            <Toolbar>\n              <Typography variant='h6' color='inherit'>\n                <strong>My Tools</strong>\n              </Typography>\n              <div className={classes.productLogo}>\n                <Typography color='inherit'>\n                  Some useful tools... &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </Typography>\n              </div>\n              <Button variant=\"contained\" color=\"secondary\" className={classes.button}>Profit Calc</Button>\n              <Button variant=\"contained\" color=\"secondary\" className={classes.button}>Secure Place</Button>\n            </Toolbar>\n          </Grid>\n          </Grid>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n\n\n\n","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Blockplace extends Component {\n  state = {\n    curdeposit: 4,\n    levelcost: 7,\n    overtake: 3,\n    fpwin: 1,\n    myfp: 3,\n    fielderror: false,\n    remain: 0,\n    msg1: '',\n    msgflag: false,\n    msgcolor: '#000000',\n    reward: 0,\n    bidcost: 0,\n    bank: 0,\n    progressbar: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost, myfp } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (isNaN(myfp)) myfp = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let bidcost = (Math.ceil((remain + overtake - myfp) / 2));\n    // let reward = Math.floor(fpwin * 1.9);\n    // this.setState({reward});\n    this.setState({bidcost});\n\n    if ((bidcost > remain) || (    bidcost + myfp < (overtake + remain - bidcost)     )) {\n      this.setState({ msg1: 'Player can\\'t win win win',\n        msgcolor: '#b70431',\n        msgflag: false\n      });\n    } else {\n      if (fpwin !==0) {\n        if (fpwin > bidcost) {\n          this.setState({\n            msg1: 'You will win ' + (fpwin - bidcost) + ' FP on this transaction',\n            msgcolor: '#177e0e',\n            msgflag: true\n          });\n        } else if (fpwin < bidcost) {\n          this.setState({\n            msg1: 'You will lose ' + (bidcost - fpwin )+ ' FP on this transaction',\n            msgcolor: '#b70431',\n            msgflag: true\n          });\n        } else {\n          this.setState({\n            msg1: 'No profit nor loss on this transaction',\n            msgcolor: '#fed029',\n            msgflag: true\n          });\n        }\n      }\n    }\n\n\n\n    // if (remain > bidcost) {\n    //   if (reward > bidcost) {\n    //     this.setState({\n    //       msg1: 'There will be a profit of ' + (reward - bidcost) + ' FP(s)',\n    //       msgcolor: '#177e0e',\n    //       msgflag: true\n    //     })\n    //   } else if (reward === bidcost) {\n    //     this.setState({\n    //       msg1: 'No profit nor loss on this transaction',\n    //       msgcolor: '#fed029',\n    //       msgflag: true\n    //     })\n    //   } else {\n    //     this.setState({\n    //       msg1: 'There will be a loss of ' + (reward - bidcost) + ' FP(s)',\n    //       msgcolor: '#b70431',\n    //       msgflag: true\n    //     });\n    //   }\n    // } else {\n    //   // There is still a small chance that the player win while leveling the GB\n    //   this.setState({ msg1: 'Player can\\'t win',\n    //     msgcolor: '#b70431',\n    //     msgflag: false\n    //   });\n    // }\n  }\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n       * current deposit can't be smaller than (my invested FP + overtake)\n    */\n    this.setState({ msg1: '' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Secure (Block) place\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Player to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.myfp}\n                name='myfp'\n                label='My invested FP'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.bank}\n                name='bank'\n                label='Amount in the Bank'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='butt'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#215d1b'\n                  />\n                  {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.remain}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;\n                      {this.state.overtake}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.myfp) && (this.state.myfp!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      My currently invested FP:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.myfp}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.fpwin) && (this.state.fpwin!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      FP Reward:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.fpwin}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.bank) && (this.state.bank!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Availaible FP in my bank:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.bank}\n                    </Typography>\n                  }\n                  {(this.state.msg1 !== '') &&\n                    <Fragment>\n                      <Typography className={classes.result} variant='body1' align='left' >\n                        <strong>Results: </strong>\n                      </Typography>\n                      {(this.state.msgflag) &&\n                        <Typography variant='body1' align='left'>\n                          You will need to invest {this.state.bidcost} FP to secure the place.\n                        </Typography>\n                      }\n                      <Typography variant='body1' align='left' >\n                        <strong><span style={{ color: `${this.state.msgcolor}` }}>{this.state.msg1}</span></strong>\n                      </Typography>\n                      {(!isNaN(this.state.bank) && (this.state.bank!==0)) &&\n                        <Typography variant='body1' align='left' >\n                          You will need to take { (this.state.bidcost - this.state.bank) } FP from your inventory while\n                        </Typography>\n                      }\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;I have nothing to say here\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Blockplace);","import React, { Component, Fragment } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors'\n\nimport Profit from './components/Profit';\nimport Navbar from './components/Navbar';\nimport Blockplace from './components/Blockplace';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: { main: pink[400] },\n    primary: { main: blue[600] },\n  },\n  typography: {\n    useNextVariants: true,\n }\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navbar />\n          <Blockplace />\n        </MuiThemeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}