{"version":3,"sources":["components/Profit.jsx","components/Navbar.jsx","components/Blockplace.jsx","components/Fasttrack_ng.jsx","components/One9.jsx","App.js","index.js"],"names":["Profit","state","curdeposit","levelcost","overtake","fpwin","fielderror","remain","msg1","msg2","msgcolor","reward","bidcost","progressbar","calculateResults","isNaN","setState","Math","ceil","floor","handleChange","event","target","name","value","intValue","parseInt","classes","this","props","className","layout","Paper","paper","elevation","Grid","container","spacing","item","xs","Typography","variant","align","color","TextField","error","label","type","fullWidth","margin","onChange","progress","percent","strokeLinecap","trailWidth","strokeWidth","strokeColor","result","style","direction","justify","info","icon","Component","withStyles","theme","width","marginTop","marginLeft","marginRight","breakpoints","up","marginBottom","padding","verticalAlign","Navbar","handleClick","root","AppBar","appBar","position","alignItems","flex","Toolbar","version","productLogo","Button","button","onClick","flexGrow","display","borderLeft","palette","grey","paddingLeft","down","justifyContent","fontSize","fontStyle","Blockplace","myfp","bank","msg","msg3","msg1flag","msg3color","reachfp","reqfp","simfp","console","clear","inc","incamount","summary","infogrid","Fasttrackng","bonus","totfpreq","reward1st","reward2nd","reward3rd","reward4th","paybyp1","paybyp2","paybyp3","paybyp4","rewardarc1","rewardarc2","rewardarc3","rewardarc4","lossp1","lossp2","lossp3","lossp4","payowner1","payowner2","payowner3","payowner4","gainp1","gainp2","gainp3","gainp4","msg4","summessage","message","totpayowner","tolevel","log","info2","Table","table","size","TableHead","TableRow","TableCell","TableBody","component","scope","One9","reward1","reward2","reward3","reward4","reward5","owner_tot1","owner_tot2","owner_tot3","owner_tot4","owner_tot5","owner_tot2_str","owner_tot3_str","owner_tot4_str","owner_tot5_str","arcbonus1","arcbonus2","arcbonus3","arcbonus4","arcbonus5","msg5","secured","remain1","remain2","remain3","remain4","String","href","rel","createMuiTheme","secondary","main","pink","primary","blue","typography","useNextVariants","App","loadpage","currentTarget","MuiThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13df31cb.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Profit extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    fielderror: false,\n    remain: 0,\n    msg1: '',\n    msg2: false,\n    msgcolor: '#000000',\n    reward: 0,\n    bidcost: 0,\n    progressbar: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let bidcost = (Math.ceil((remain + overtake) / 2));\n    let reward = Math.floor(fpwin * 1.9);\n    this.setState({reward});\n    this.setState({bidcost});\n    if (remain > bidcost) {\n      if (reward > bidcost) {\n        this.setState({\n          msg1: 'There will be a profit of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#177e0e',\n          msg2: true\n        })\n      } else if (reward === bidcost) {\n        this.setState({\n          msg1: 'No profit nor loss on this transaction',\n          msgcolor: '#fed029',\n          msg2: true\n        })\n      } else {\n        this.setState({\n          msg1: 'There will be a loss of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#b70431',\n          msg2: true\n        });\n      }\n    } else {\n      // There is still a small chance that the player win while leveling the GB\n      this.setState({ msg1: 'Player can\\'t win',\n        msgcolor: '#b70431',\n        msg2: false\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    this.setState({ msg1: '' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Profit Calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Amount to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='butt'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#215d1b'\n                  />\n                  {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.remain}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;\n                      {this.state.overtake}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.reward) && (this.state.reward!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Reward (Arc bonus applied):\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.reward}\n                    </Typography>\n                  }\n                  {(this.state.msg1 !== '') &&\n                    <Fragment>\n                      <Typography className={classes.result} variant='body1' align='left' >\n                        <strong>Results: </strong>\n                      </Typography>\n                      {(this.state.msg2) &&\n                        <Typography>\n                          The player will need to invest {this.state.bidcost} FP while gaining {this.state.reward} FP.\n                        </Typography>\n                      }\n                      <Typography variant='body1' align='left' >\n                        <strong><span style={{ color: `${this.state.msgcolor}` }}>{this.state.msg1}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Result is calculated based on the investing player owning a level 80 Arc\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Profit);","import React, { Component } from 'react';\n\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  button: {\n    margin: theme.spacing(),\n  },\n  version: {\n    fontSize: '14px',\n    fontStyle: 'italic'\n  }\n});\n\n\nclass Navbar extends Component {\n\n  render() {\n    const { classes, handleClick } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position='static' color='primary'>\n          <Grid container spacing={0} alignItems='baseline'>\n          <Grid item xs={12} className={classes.flex}>\n            <Toolbar>\n              <Typography variant='h6' color='inherit'>\n                <strong>Fabou's FoE Tools</strong> <span className={classes.version}> v1.4.0</span>\n              </Typography>\n              <div className={classes.productLogo}>\n                <Typography color='inherit'>\n                  Hopefully useful... &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </Typography>\n              </div>\n              <Button\n                name=\"secure\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Secure Place\n              </Button>\n              <Button\n                name=\"profit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Profit Calc\n              </Button>\n              <Button\n                name=\"fastng\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                FastTrack\n              </Button>\n              <Button\n                name=\"one9\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                1.9 Calc\n              </Button>\n            </Toolbar>\n          </Grid>\n          </Grid>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n\n\n\n","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  result: {\n    marginTop: 5\n  },\n  summary: {\n    marginLeft: 10\n  },\n  infogrid: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  }\n});\n\n\nclass Blockplace extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    myfp: 0,\n    bank: 0,\n    fielderror: false,\n    remain: 0,\n    msg: '',\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg1flag: false, // True if win, lose or stale. False if player can't win\n    msgcolor: '#000000',\n    msg3color: '#000000',\n    reachfp: 0,\n    progressbar: 0,\n    reqfp: 0,\n    simfp: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost, myfp, bank } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (isNaN(myfp)) myfp = 0;\n    if (isNaN(bank)) bank = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let reachfp = (Math.ceil((remain + overtake) / 2));\n    this.setState({reachfp});\n    // Checking if the player can secure the place\n    // If the player can secure the place then it can be a win, loss or stale on FP spending\n    let simfp;\n    console.clear();\n    if (myfp > (overtake + remain)) {\n      this.setState({\n        msg: 'Your place is already secured you don\\'t need to put any more FP'\n      });\n    } else {\n      for (var inc = 1; inc <= remain; inc++) {\n        simfp = myfp + inc ;\n        if (simfp >= (overtake + (remain - inc))) {\n          if ((simfp === overtake) && (inc === remain )) {\n            this.setState({ msg1: 'You can\\'t secure the place',\n            msgcolor: '#b70431',\n            msg1flag: false\n            });\n            break;\n          } else {\n            this.setState({simfp});\n            this.setState({\n              msg: 'To secure the place, you will need to reach a total of ' + simfp + ' FP'\n            });\n            // Checking for win, loss or stale\n            if (fpwin !==0) {\n              var reqfp = simfp - myfp; // required FP to win\n              this.setState({reqfp});\n              if (fpwin > reqfp) {\n                this.setState({\n                  msg1: 'You will win ' + (fpwin - reqfp) + ' FP on this transaction',\n                  msgcolor: '#177e0e',\n                  msg1flag: true\n                });\n              } else if (fpwin < reqfp) {\n                this.setState({\n                  msg1: 'If you secure the place you will lose ' + (reqfp - fpwin )+ ' FP',\n                  msgcolor: '#b70431',\n                  msg1flag: true\n                });\n              } else {\n                this.setState({\n                  msg1: 'You will not lose or gain any FP if you secure the place',\n                  msgcolor: '#fed029',\n                  msg1flag: true\n                });\n              }\n            }\n            break;\n          }\n        } else if (myfp + remain <= overtake) {\n          this.setState({ msg1: 'You can\\'t secure the place',\n          msgcolor: '#b70431',\n          msg1flag: false\n          });\n          break;\n        }\n      } // For loop\n    }\n    // Checking for inventory and bank additional information\n    if (bank === 0) {\n      this.setState({\n        msg2: 'With 0 FP in the bank the whole amout will need to come from inventory'\n      });\n    } else if (bank >= reqfp) {\n      this.setState({\n        msg2: 'You don\\'t need to take any FP from inventory'\n      });\n    } else {\n      this.setState({\n        msg2: 'You will need to take out ' + (reqfp - bank) + ' FP from inventory'\n      });\n    }\n    if ((reqfp - (bank + fpwin) > 0)) {\n      this.setState({\n        msg3: 'Your inventory will decrease by ' + (reqfp - (bank + fpwin)) + ' FP' ,\n        msg3color: '#b70431',\n        });\n    } else if ((reqfp - (bank + fpwin) === 0)) {\n      this.setState({\n        msg3: 'Your inventory will remain the same' ,\n        msg3color: '#fed029',\n      });\n    } else {\n      if (fpwin !== 0) {\n        var incamount;\n        if (bank >= reqfp) {\n          incamount = fpwin;\n        } else {\n          incamount = (fpwin - (reqfp - bank));\n        }\n        this.setState({\n          msg3: 'Inventory will increase by ' + incamount + ' FP' ,\n          msg3color: '#177e0e',\n        });\n      }\n    }\n  } // calculateResults\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n       * current deposit can't be smaller than (my invested FP + overtake)\n    */\n    this.setState({ msg:'', msg1: '', msg2: '', msg3:'' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    /*   TODO:\n       * Implement tooltips on summary fields (help for usage)\n    */\n    const { classes } = this.props;\n    const { reqfp, simfp, bank, msg, msg1, msg2, msg3 } = this.state;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Secure (Block) place\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Player to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.myfp}\n                name='myfp'\n                label='My invested FP'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={bank}\n                name='bank'\n                label='Amount in the Bank'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>   { /* Summary  */ }\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='square'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#47933f'\n                  />\n                </Fragment>\n              }\n            </Grid>\n            <Grid container spacing={0}>\n              {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.remain}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.overtake}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.fpwin) && (this.state.fpwin!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Targeted place reward:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.fpwin}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.myfp) && (this.state.myfp!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      My currently invested FP:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.myfp}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(bank) && (bank!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Availaible FP in my bank:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {bank}\n                  </Typography>\n                  </Grid>\n                </Fragment>\n              }\n            </Grid>   {/* container */}\n            <Grid item xs={12}>   {/* Result */}\n              {((msg !== '') || (msg1!=='')) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Results: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='left' >\n                    {msg}\n                  </Typography>\n                  {(msg1 !== '') &&\n                    <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msgcolor}` }}>{msg1}</span></strong>\n                    </Typography>\n                  }\n                </Fragment>\n              }\n            </Grid>\n            <Grid item xs={12}>   {/* Additional Info */}\n              {(msg1 !== '' && (this.state.msg1flag)) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Additional info: </strong>\n                  </Typography>\n                  {(this.state.msg1flag) &&\n                    <Typography variant='body1' align='left'>\n                      You need to invest {reqfp} more FP to reach the required {simfp} FP\n                    </Typography>\n                  }\n                  {(msg2!=='') &&\n                    <Fragment>\n                      <Typography variant='body1' align='left' >\n                        {msg2}\n                      </Typography>\n                      <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msg3color}` }}>{msg3}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container className={classes.infogrid} spacing={0}>\n            <Grid item  xs={1} >\n              <Typography align='center' color='secondary'>\n                <Info />\n              </Typography>\n            </Grid>\n            <Grid item xs={11} >\n              <Typography align='left' color='secondary'>\n                It is assumed that the player has not used any FP from inventory previously\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Blockplace);","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Fasttrackng extends Component {\n  state = {\n    bonus: 1.8,\n    totfpreq: 0,\n    reward1st: 0,\n    reward2nd: 0,\n    reward3rd: 0,\n    reward4th: 0,\n    paybyp1: 0,\n    paybyp2: 0,\n    paybyp3: 0,\n    paybyp4: 0,\n    rewardarc1: 0,\n    rewardarc2: 0,\n    rewardarc3: 0,\n    rewardarc4: 0,\n    lossp1: 0,\n    lossp2: 0,\n    lossp3: 0,\n    lossp4: 0,\n    payowner1: 0,\n    payowner2: 0,\n    payowner3: 0,\n    payowner4: 0,\n    gainp1: 0,\n    gainp2: 0,\n    gainp3: 0,\n    gainp4: 0,\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg4: '',\n    summessage: '',\n    fielderror: false,\n    msgcolor: '#000000',\n  }\n\n\n  calculateResults = () => {\n    let { bonus, totfpreq, reward1st, reward2nd, reward3rd, reward4th } = this.state;\n    var paybyp1, rewardarc1, lossp1, payowner1, gainp1;\n    var paybyp2, rewardarc2, lossp2, payowner2, gainp2;\n    var paybyp3, rewardarc3, lossp3, payowner3, gainp3;\n    var paybyp4, rewardarc4, lossp4, payowner4, gainp4;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(totfpreq)) totfpreq = 0;\n    if (isNaN(reward1st)) reward1st = 0;\n    if (isNaN(reward2nd)) reward2nd = 0;\n    if (isNaN(reward3rd)) reward3rd = 0;\n    if (isNaN(reward4th)) reward4th = 0;\n    // Resetting all messages\n    this.setState({ msg1: '', msg2:'', msg3:'', summessage: '' })\n    if (reward1st>0) {\n      rewardarc1 = Math.ceil(reward1st * bonus);\n      paybyp1 = Math.ceil(totfpreq / 2);\n      lossp1 = paybyp1 - rewardarc1;\n      if (paybyp1 < rewardarc1) { lossp1 = 0}; // Taking into account Arc reward is greater than what p1 pays in\n\n      gainp1 = Math.ceil(0.01 * paybyp1);\n      if ((paybyp1 - rewardarc1 + gainp1) < 1) {\n        payowner1 = 0\n      } else {\n        payowner1 = paybyp1 - rewardarc1 + gainp1\n      }\n\n      // if (payowner1 === 0) { gainp1 = rewardarc1 - paybyp1 };\n      let message = '1st:  player=' + paybyp1 + ' (Arc≈' + rewardarc1 + ', Tot profit≈' + gainp1 + '),   I\\'ll pay you back=' + payowner1 ;\n      let effi = Math.ceil((payowner1 / totfpreq) * 100);\n      let tolevel = totfpreq - paybyp1\n      let summessage = 'With only 1st place open, the total contribution by owner will be ' + payowner1 + ' FP (' + effi + '% of total required FP). The total FP remaining to level the GB will be ' + tolevel + '.';\n      this.setState({ rewardarc1: rewardarc1, paybyp1: paybyp1, lossp1: lossp1, payowner1: payowner1, gainp1: gainp1, msg1: message, summessage: summessage });\n    }\n\n    if (reward2nd>0) {\n      rewardarc2 = Math.ceil(reward2nd * bonus);\n      paybyp2 = Math.ceil(paybyp1 / 2);\n      lossp2 = paybyp2 - rewardarc2;\n      if (paybyp2 < rewardarc2) { lossp2 = 0};\n\n      gainp2 = Math.ceil(0.02 * paybyp2);\n      if ((paybyp2 - rewardarc2 + gainp2) < 1) {\n        payowner2 = 0\n      } else {\n        payowner2 = paybyp2 - rewardarc2 + gainp2\n      }\n\n      // if (payowner2 === 0) { gainp2 = rewardarc2 - paybyp2 };\n      let message = '2nd:  player=' + paybyp2 + ' (Arc≈' + rewardarc2 + ', Tot profit≈' + gainp2 + '),   I\\'ll pay you back=' + payowner2 ;\n      let totpayowner = payowner1 + payowner2;\n      let tolevel = totfpreq - (paybyp1 + paybyp2);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st and 2nd place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the GB will be ' + tolevel + '.';\n      this.setState({ rewardarc2: rewardarc2, paybyp2: paybyp2, lossp2: lossp2, payowner2: payowner2, gainp2: gainp2, msg2: message, summessage: summessage  });\n    }\n\n    if (reward3rd>0) {\n      rewardarc3 = Math.ceil(reward3rd * bonus);\n      paybyp3 = Math.ceil(paybyp2 / 2);\n      lossp3 = paybyp3 - rewardarc3;\n      if (paybyp3 < rewardarc3) { lossp3 = 0};\n\n      gainp3 = Math.ceil(0.04 * paybyp3);\n      if ((paybyp3 - rewardarc3 + gainp3) < 1) {\n        payowner3 = 0\n      } else {\n        payowner3 = paybyp3 - rewardarc3 + gainp3\n      }\n\n      // if (payowner3 === 0) { gainp3 = rewardarc3 - paybyp3 };\n      let message = '3rd:  player=' + paybyp3 + ' (Arc≈' + rewardarc3 + ', Tot profit≈' + gainp3 + '),   I\\'ll pay you back=' + payowner3 ;\n      let totpayowner = payowner1 + payowner2 + payowner3;\n      let tolevel = totfpreq - ( paybyp1 + paybyp2 + paybyp3);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st, 2nd and 3rd place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the GB will be ' + tolevel + '.';\n      this.setState({ rewardarc3: rewardarc3, paybyp3: paybyp3, lossp3: lossp3, payowner3: payowner3, gainp3: gainp3, msg3: message, summessage: summessage });\n    }\n\n    if (reward4th>0) {\n      rewardarc4 = Math.ceil(reward4th * bonus);\n      paybyp4 = Math.ceil(paybyp3 / 2);\n      lossp4 = paybyp4 - rewardarc4;\n      if (paybyp4 < rewardarc4) { lossp4 = 0};\n\n      gainp4 = Math.ceil(0.08 * paybyp4);\n      if ((paybyp4 - rewardarc4 + gainp4) < 1) {\n        payowner4 = 0\n      } else {\n        payowner4 = paybyp4 - rewardarc4 + gainp4\n      }\n\n      // if (payowner4 === 0) { gainp4 = rewardarc4 - paybyp4 };\n      let message = '4th:  player=' + paybyp4 + ' (Arc≈' + rewardarc4 + ',Tot profit≈' + gainp4 + '),   I\\'ll pay you back=' + payowner4 ;\n      let totpayowner = payowner1 + payowner2 + payowner3 + payowner4;\n      let tolevel = totfpreq - (paybyp1 + paybyp2 + paybyp3 + paybyp4);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st, 2nd, 3rd and 4th place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the GB will be ' + tolevel + '.';\n      this.setState({ rewardarc4: rewardarc4, paybyp4: paybyp4, lossp4: lossp4, payowner4: payowner4, gainp4: gainp4, msg4: message, summessage: summessage });\n    }\n  }\n\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.reward1st >= this.state.totfpreq) {\n        console.log('Inside IF');\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.calculateResults();\n\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Great Building FastTrack\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n                <p fontStyle=\"italic\">This is the second version of the FastTrack process </p>\n              </Typography>\n              <Typography className={classes.info2} variant='subtitle2'>\n                If you are not familiar with GB FastTrack process read explantion on the guild forum.\n              </Typography><br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={this.state.totfpreq}\n                error={this.state.fielderror}\n                name='totfpreq'\n                label='Total FP required'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward1st}\n                error={this.state.fielderror}\n                name='reward1st'\n                label='1st place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward2nd}\n                name='reward2nd'\n                label='2nd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward3rd}\n                name='reward3rd'\n                label='3rd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward4th}\n                name='reward4th'\n                label='4th place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <br></br>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"center\">Rewards</TableCell>\n                        <TableCell align=\"center\">Player pays in</TableCell>\n                        <TableCell align=\"center\">Owner pays back</TableCell>\n                        <TableCell align=\"center\">Player profit</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableHead>\n                <TableBody>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">1st place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward1st}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp1}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner1}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp1}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">2nd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward2nd}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp2}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner2}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp2}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">3rd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward3rd}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp3}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner3}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp3}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0 &&\n                    !isNaN(this.state.reward4th) && this.state.reward4th!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">4th place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward4th}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp4}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner4}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp4}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableBody>\n              </Table>\n            </Grid>\n\n            <Grid item xs={12}>\n              {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                !isNaN(this.state.reward1st) && this.state.reward1st!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <br></br>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography>{this.state.summessage}</Typography>\n                  <Typography className={classes.result}>\n                    <strong>Copy and paste the following into one of the guild \"Fast track\" thread after posting your GB</strong>\n                  </Typography>\n                  <Typography className={classes.info2}>\n                    I am opening the following places on my GB posted above:\n                    <br></br>\n                    {(this.state.msg1!=='') && <Typography>&nbsp;&nbsp;{this.state.msg1}<br></br></Typography>}\n                    {(this.state.msg2!=='') && <Typography>&nbsp;&nbsp;{this.state.msg2}<br></br></Typography>}\n                    {(this.state.msg3!=='') && <Typography>&nbsp;&nbsp;{this.state.msg3}<br></br></Typography>}\n                    {(this.state.msg4!=='') && <Typography>&nbsp;&nbsp;{this.state.msg4}<br></br></Typography>}\n                    <p><strong>NOTE:</strong> Please make sure you post in order 1st, 2nd, 3rd & 4th (un-ordered posting has caused some issues in the past).</p>\n\n                  </Typography>\n                </Fragment>\n              }\n            </Grid>\n\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Contributions are all based on 1.8 rate (Arc 60+ required to make profit). Numbers will be correct only if no one else outside interfere with the deals.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Fasttrackng);","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  result: {\n    marginTop: 10\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass One9 extends Component {\n  state = {\n    bonus: 1.9,\n    totfpreq: 0,\n    reward1: 0,\n    reward2: 0,\n    reward3: 0,\n    reward4: 0,\n    reward5: 0,\n    owner_tot1: 0,\n    owner_tot2: 0,\n    owner_tot3: 0,\n    owner_tot4: 0,\n    owner_tot5: 0,\n    owner_tot2_str: '',\n    owner_tot3_str: '',\n    owner_tot4_str: '',\n    owner_tot5_str: '',\n    arcbonus1: 0,\n    arcbonus2: 0,\n    arcbonus3: 0,\n    arcbonus4: 0,\n    arcbonus5: 0,\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg4: '',\n    msg5: '',\n    summessage: '',\n    fielderror: false,\n    msgcolor: '#000000',\n  }\n\n\n  calculateResults = () => {\n    let { bonus, totfpreq, reward1, reward2, reward3, reward4, reward5 } = this.state;\n\n    var secured;\n    var arcbonus1, remain1, owner_tot1;\n    var arcbonus2, remain2, owner_tot2, owner_tot2_str;\n    var arcbonus3, remain3, owner_tot3, owner_tot3_str;\n    var arcbonus4, remain4, owner_tot4, owner_tot4_str;\n    var arcbonus5, remain5, owner_tot5, owner_tot5_str;\n\n\n\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(totfpreq)) totfpreq = 0;\n    if (isNaN(reward1)) reward1 = 0;\n    if (isNaN(reward2)) reward2 = 0;\n    if (isNaN(reward3)) reward3 = 0;\n    if (isNaN(reward4)) reward4 = 0;\n    if (isNaN(reward5)) reward5 = 0;\n    // Resetting all messages\n    this.setState({ msg1: '', msg2:'', msg3:'', summessage: '' })\n\n    if (reward1>0) {\n      arcbonus1 = Math.ceil(reward1 * bonus)\n      secured = totfpreq - (2 * arcbonus1)\n      if (secured >= 0) {\n        remain1 = arcbonus1\n        owner_tot1 = secured\n      } else {\n        remain1 = arcbonus1 + secured\n        owner_tot1 = 0\n      }\n      let message = '1st place available for ' + arcbonus1 + ' FP';\n      let summessage\n      if (owner_tot1 > 0) summessage = 'The total cost for the owner up to 1st place is ' + owner_tot1 + ' FP.';\n      this.setState({ arcbonus1: arcbonus1, owner_tot1: owner_tot1, msg1: message, summessage: summessage });\n    }\n\n    if (reward2>0) {\n      arcbonus2 = Math.ceil(reward2 * bonus)\n      secured = remain1 - (2 * arcbonus2)\n      if (secured >= 0) {\n        remain2 = arcbonus2\n        owner_tot2 = owner_tot1 + secured\n        if (owner_tot1 > 0){\n          owner_tot2_str = String(owner_tot2) + ' (' + String(owner_tot1) + '+' + String(secured) + ')'\n        } else {\n          owner_tot2_str = String(owner_tot2)\n        }\n      } else {\n        remain2 = arcbonus2 + secured\n        owner_tot2 = owner_tot1\n        owner_tot2_str = String(owner_tot1)\n      }\n      let message = '2nd place available for ' + arcbonus2 + ' FP';\n      let summessage\n      if (owner_tot2 > 0) summessage = 'The total cost for the owner up to 2nd place is ' + owner_tot2 + ' FP.';\n      this.setState({ arcbonus2: arcbonus2, owner_tot2:owner_tot2, msg2: message, owner_tot2_str: owner_tot2_str, summessage: summessage });\n    }\n\n    if (reward3>0) {\n      arcbonus3 = Math.ceil(reward3 * bonus)\n      secured = remain2 - (2 * arcbonus3)\n      if (secured >= 0) {\n        remain3 = arcbonus3\n        owner_tot3 = owner_tot2 + secured\n        if (owner_tot2 > 0){\n          owner_tot3_str = String(owner_tot3) + ' (' + String(owner_tot2) + '+' + String(secured) + ')'\n        } else {\n          owner_tot3_str = String(owner_tot3)\n        }\n      } else {\n        remain3 = arcbonus3 + secured\n        owner_tot3 = owner_tot2\n        owner_tot3_str = String(owner_tot2)\n      }\n      let message = '3rd place available for ' + arcbonus3 + ' FP';\n      let summessage\n      if (owner_tot3 > 0)  summessage = 'The total cost for the owner up to 3rd place is ' + owner_tot3 + ' FP.';\n      this.setState({ arcbonus3: arcbonus3, owner_tot3:owner_tot3, msg3: message, owner_tot3_str: owner_tot3_str, summessage: summessage });\n    }\n\n    if (reward4>0) {\n      arcbonus4 = Math.ceil(reward4 * bonus)\n      secured = remain3 - (2 * arcbonus4)\n      if (secured >= 0) {\n        remain4 = arcbonus4\n        owner_tot4 = owner_tot3 + secured\n        if (owner_tot3 > 0){\n          owner_tot4_str = String(owner_tot4) + ' (' + String(owner_tot3) + '+' + String(secured) + ')'\n        } else {\n          owner_tot4_str = String(owner_tot4)\n        }\n      } else {\n        remain4 = arcbonus4 + secured\n        owner_tot4 = owner_tot3\n        owner_tot4_str = String(owner_tot3)\n      }\n      let message = '4th place available for ' + arcbonus4 + ' FP';\n      let summessage\n      if (owner_tot4 > 0)  summessage = 'The total cost for the owner up to 4th place is ' + owner_tot4 + ' FP.';\n      this.setState({ arcbonus4: arcbonus4, owner_tot4:owner_tot4, msg4: message, owner_tot4_str: owner_tot4_str, summessage: summessage });\n    }\n\n    if (reward5>0) {\n      arcbonus5 = Math.ceil(reward5 * bonus)\n      secured = remain4 - (2 * arcbonus5)\n      if (secured >= 0) {\n        remain5 = arcbonus5\n        owner_tot5 = owner_tot4 + secured\n        if (owner_tot4 > 0){\n          owner_tot5_str = String(owner_tot5) + ' (' + String(owner_tot4) + '+' + String(secured) + ')'\n        } else {\n          owner_tot5_str = String(owner_tot5)\n        }\n      } else {\n        remain5 = arcbonus5 + secured\n        owner_tot5 = owner_tot4\n        owner_tot5_str = String(owner_tot4)\n      }\n      let message = '5th place available for ' + arcbonus5 + ' FP';\n      let summessage\n      if (owner_tot5 > 0)  summessage = 'The total cost for the owner up to 5th place is ' + owner_tot5 + ' FP after this, there will be ' + arcbonus5 + ' FP left to level the building.';\n      this.setState({ arcbonus5: arcbonus5, owner_tot5:owner_tot5, msg5: message, owner_tot5_str: owner_tot5_str,summessage: summessage });\n    }\n  }\n\n\n\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.reward1 >= this.state.totfpreq) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.calculateResults();\n\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={0}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                1.9 Thread Calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n                <p fontStyle=\"italic\">A simple and basic 1.9 calculator for the IntrepidOne</p>\n              </Typography>\n              <Typography className={classes.info2} variant='subtitle2'>\n                If you are not familiar with 1.9 swap principle and how it compares to FastTrack read&nbsp;\n                <strong><a href=\"https://github.com/fabou78/forgecalc/blob/master/ONE9.md\" target=\"_blank\" rel=\"noopener noreferrer\">this</a>.</strong>\n              </Typography><br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={this.state.totfpreq}\n                error={this.state.fielderror}\n                name='totfpreq'\n                label='Total FP required'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <TextField\n                value={this.state.reward1}\n                error={this.state.fielderror}\n                name='reward1'\n                label='Reward 1st'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Grid item xs={2}>\n              <TextField\n                value={this.state.reward2}\n                name='reward2'\n                label='Reward 2nd'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Grid item xs={2}>\n              <TextField\n                value={this.state.reward3}\n                name='reward3'\n                label='Reward 3rd'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Grid item xs={2}>\n              <TextField\n                value={this.state.reward4}\n                name='reward4'\n                label='Reward 4th'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Grid item xs={2}>\n              <TextField\n                value={this.state.reward5}\n                name='reward5'\n                label='Reward 5th'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <br></br><br></br>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"center\">Base Reward</TableCell>\n                        <TableCell align=\"center\">Total needed from Owner</TableCell>\n                        <TableCell align=\"center\">Investor puts</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableHead>\n                <TableBody>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">1st place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward1}</TableCell>\n                        <TableCell align=\"center\">{this.state.owner_tot1}</TableCell>\n                        <TableCell align=\"center\">{this.state.arcbonus1}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0 &&\n                    !isNaN(this.state.reward2) && this.state.reward2!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">2nd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward2}</TableCell>\n                        <TableCell align=\"center\">{this.state.owner_tot2_str}</TableCell>\n                        <TableCell align=\"center\">{this.state.arcbonus2}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0 &&\n                    !isNaN(this.state.reward2) && this.state.reward2!==0 &&\n                    !isNaN(this.state.reward3) && this.state.reward3!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">3rd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward3}</TableCell>\n                        <TableCell align=\"center\">{this.state.owner_tot3_str}</TableCell>\n                        <TableCell align=\"center\">{this.state.arcbonus3}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0 &&\n                    !isNaN(this.state.reward2) && this.state.reward2!==0 &&\n                    !isNaN(this.state.reward3) && this.state.reward3!==0 &&\n                    !isNaN(this.state.reward4) && this.state.reward4!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">4th place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward4}</TableCell>\n                        <TableCell align=\"center\">{this.state.owner_tot4_str}</TableCell>\n                        <TableCell align=\"center\">{this.state.arcbonus4}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1) && this.state.reward1!==0 &&\n                    !isNaN(this.state.reward2) && this.state.reward2!==0 &&\n                    !isNaN(this.state.reward3) && this.state.reward3!==0 &&\n                    !isNaN(this.state.reward4) && this.state.reward4!==0 &&\n                    !isNaN(this.state.reward5) && this.state.reward5!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">5th place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward5}</TableCell>\n                        <TableCell align=\"center\">{this.state.owner_tot5_str}</TableCell>\n                        <TableCell align=\"center\">{this.state.arcbonus5}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableBody>\n              </Table>\n            </Grid>\n\n            <Grid item xs={12}>\n              {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                !isNaN(this.state.reward1) && this.state.reward1!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <br></br><br></br>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography>{this.state.summessage}</Typography>\n                  <Typography className={classes.result}>\n                    <strong>Double check values entered above then copy and paste the following into the guild \"1.9\" thread after posting your GB.</strong>\n                  </Typography>\n                  <Typography className={classes.info2}>\n                    I am opening the following places on my GB posted above:\n                    <br></br>\n                    {(this.state.msg1!=='') && <Typography>&nbsp;&nbsp;{this.state.msg1}<br></br></Typography>}\n                    {(this.state.msg2!=='') && <Typography>&nbsp;&nbsp;{this.state.msg2}<br></br></Typography>}\n                    {(this.state.msg3!=='') && <Typography>&nbsp;&nbsp;{this.state.msg3}<br></br></Typography>}\n                    {(this.state.msg4!=='') && <Typography>&nbsp;&nbsp;{this.state.msg4}<br></br></Typography>}\n                    {(this.state.msg5!=='') && <Typography>&nbsp;&nbsp;{this.state.msg5}<br></br></Typography>}\n                    <br></br>\n                    {/* <strong>NOTE:</strong> Please make sure you post in order 1st, 2nd, 3rd & 4th (un-ordered posting has caused some issues in the past). */}\n                  </Typography>\n                </Fragment>\n              }\n            </Grid>\n\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp; As of now the calc only works for GB starting at 0 FP. If your GB already has FP please DO NOT use this calc and try another one.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(One9);","import React, { Component, Fragment } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors'\n\nimport Profit from './components/Profit';\nimport Navbar from './components/Navbar';\nimport Blockplace from './components/Blockplace';\nimport Fasttrackng from './components/Fasttrack_ng';\nimport One9 from './components/One9';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: { main: pink[400] },\n    primary: { main: blue[600] },\n  },\n  typography: {\n    useNextVariants: true,\n }\n});\n\n\nclass App extends Component {\n  state = {\n    loadpage: 'secure'\n  }\n\n  handleClick = (event) => {\n    const { name } = event.currentTarget;\n    if (name === 'secure') {\n      this.setState({ loadpage: 'secure' });\n    };\n    if (name === 'profit') {\n      this.setState({ loadpage: 'profit' });\n    };\n    if (name === 'fastng') {\n      this.setState({ loadpage: 'fastng' });\n    };\n    if (name === 'one9') {\n      this.setState({ loadpage: 'one9' });\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navbar handleClick={this.handleClick} />\n          { (this.state.loadpage === 'secure') &&\n            <Blockplace />\n          }\n          { (this.state.loadpage === 'profit') &&\n            <Profit />\n          }\n          { (this.state.loadpage === 'fastng') &&\n            <Fasttrackng />\n          }\n          { (this.state.loadpage === 'one9') &&\n            <One9 />\n          }\n        </MuiThemeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}