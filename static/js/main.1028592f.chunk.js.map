{"version":3,"sources":["components/Profit.jsx","components/Navbar.jsx","components/Blockplace.jsx","components/Fasttrack.jsx","components/Fasttrack_ng.jsx","components/Progressbar.jsx","components/Arcstats.jsx","App.js","index.js"],"names":["Profit","state","curdeposit","levelcost","overtake","fpwin","fielderror","remain","msg1","msg2","msgcolor","reward","bidcost","progressbar","calculateResults","isNaN","setState","Math","ceil","floor","handleChange","event","target","name","value","intValue","parseInt","classes","this","props","className","layout","Paper","paper","elevation","Grid","container","spacing","item","xs","Typography","variant","align","color","TextField","error","label","type","fullWidth","margin","onChange","progress","percent","strokeLinecap","trailWidth","strokeWidth","strokeColor","result","style","direction","justify","info","icon","Component","withStyles","theme","width","marginTop","unit","marginLeft","marginRight","breakpoints","up","marginBottom","padding","verticalAlign","Navbar","handleClick","root","AppBar","appBar","position","alignItems","flex","Toolbar","version","productLogo","Button","button","onClick","flexGrow","display","borderLeft","palette","grey","paddingLeft","down","justifyContent","fontSize","fontStyle","Blockplace","myfp","bank","msg","msg3","msg1flag","msg3color","reachfp","reqfp","simfp","console","clear","inc","incamount","summary","infogrid","Fasttrack","bonus","totfpreq","reward1st","reward2nd","reward3rd","teamcont1","teamcont2","teamcont3","owncont1","owncont2","owncont3","remain1st","remain2nd","remain3rd","summessage","message","max","totcont","info2","Table","table","size","TableHead","TableRow","TableCell","TableBody","component","scope","Fasttrackng","reward4th","paybyp1","paybyp2","paybyp3","paybyp4","rewardarc1","rewardarc2","rewardarc3","rewardarc4","lossp1","lossp2","lossp3","lossp4","payowner1","payowner2","payowner3","payowner4","gainp1","gainp2","gainp3","gainp4","msg4","totpayowner","tolevel","log","useStyles","makeStyles","track","height","background","borderRadius","boxShadow","filling","percentage","ProgressBar","colors","scaleOrdinal","schemeCategory10","range","renderLabelContent","x","y","midAngle","transform","textAnchor","toFixed","ArcGraph","activeIndex","animation","arc_data","paylodUniqBy","data","dataKey","cx","cy","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","map","entry","index","key","fill","displayName","Arcstasts","isLoaded","players","stats","players_arc","players_arc60","players_arc80","pcnt_player_tot","pcnt_player_inac","nb_player_tot","nb_player_inac","fetch","then","response","json","my_arc_list","my_arc_list60","my_arc_list80","forEach","element","Arc","push","Name","percent1","round","stat","toString","nbplay","nbactive","percent2","arc_tot","percent3","arc_60","arc_80","no_arc","low_arc","pcnt_player_ac","pcnt_arc","nb_player_ac","nb_arc","arc","createMuiTheme","secondary","main","pink","primary","blue","typography","useNextVariants","App","loadpage","currentTarget","MuiThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1028592f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Profit extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    fielderror: false,\n    remain: 0,\n    msg1: '',\n    msg2: false,\n    msgcolor: '#000000',\n    reward: 0,\n    bidcost: 0,\n    progressbar: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let bidcost = (Math.ceil((remain + overtake) / 2));\n    let reward = Math.floor(fpwin * 1.9);\n    this.setState({reward});\n    this.setState({bidcost});\n    if (remain > bidcost) {\n      if (reward > bidcost) {\n        this.setState({\n          msg1: 'There will be a profit of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#177e0e',\n          msg2: true\n        })\n      } else if (reward === bidcost) {\n        this.setState({\n          msg1: 'No profit nor loss on this transaction',\n          msgcolor: '#fed029',\n          msg2: true\n        })\n      } else {\n        this.setState({\n          msg1: 'There will be a loss of ' + (reward - bidcost) + ' FP(s)',\n          msgcolor: '#b70431',\n          msg2: true\n        });\n      }\n    } else {\n      // There is still a small chance that the player win while leveling the GB\n      this.setState({ msg1: 'Player can\\'t win',\n        msgcolor: '#b70431',\n        msg2: false\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    this.setState({ msg1: '' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Profit Calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Amount to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='butt'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#215d1b'\n                  />\n                  {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.remain}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;\n                      {this.state.overtake}\n                    </Typography>\n                  }\n                  {(!isNaN(this.state.reward) && (this.state.reward!==0)) &&\n                    <Typography variant='body1' align='left' >\n                      Reward (Arc bonus applied):\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      {this.state.reward}\n                    </Typography>\n                  }\n                  {(this.state.msg1 !== '') &&\n                    <Fragment>\n                      <Typography className={classes.result} variant='body1' align='left' >\n                        <strong>Results: </strong>\n                      </Typography>\n                      {(this.state.msg2) &&\n                        <Typography>\n                          The player will need to invest {this.state.bidcost} FP while gaining {this.state.reward} FP.\n                        </Typography>\n                      }\n                      <Typography variant='body1' align='left' >\n                        <strong><span style={{ color: `${this.state.msgcolor}` }}>{this.state.msg1}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Result is calculated based on the investing player owning a level 80 Arc\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Profit);","import React, { Component } from 'react';\n\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  version: {\n    fontSize: '14px',\n    fontStyle: 'italic'\n  }\n});\n\n\nclass Navbar extends Component {\n\n  render() {\n    const { classes, handleClick } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position='static' color='primary'>\n          <Grid container spacing={24} alignItems='baseline'>\n          <Grid item xs={12} className={classes.flex}>\n            <Toolbar>\n              <Typography variant='h6' color='inherit'>\n                <strong>Fabou's FoE Tools</strong> <span className={classes.version}> v1.3.1</span>\n              </Typography>\n              <div className={classes.productLogo}>\n                <Typography color='inherit'>\n                  Hopefully useful... &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </Typography>\n              </div>\n              <Button\n                name=\"secure\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Secure Place\n              </Button>\n              <Button\n                name=\"profit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Profit Calc\n              </Button>\n              <Button\n                name=\"fasttk\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                FastTrack v1\n              </Button>\n              <Button\n                name=\"fastng\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                FastTrack v2\n              </Button>\n              <Button\n                name=\"arcstats\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleClick}\n              >\n                Guild Arc Stats\n              </Button>\n            </Toolbar>\n          </Grid>\n          </Grid>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n\n\n\n","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nimport { Line } from 'rc-progress';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 5\n  },\n  summary: {\n    marginLeft: 10\n  },\n  infogrid: {\n    marginTop: 20\n  },\n  progress: {\n    marginBottom: 15\n  }\n});\n\n\nclass Blockplace extends Component {\n  state = {\n    curdeposit: 0,\n    levelcost: 0,\n    overtake: 0,\n    fpwin: 0,\n    myfp: 0,\n    bank: 0,\n    fielderror: false,\n    remain: 0,\n    msg: '',\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg1flag: false, // True if win, lose or stale. False if player can't win\n    msgcolor: '#000000',\n    msg3color: '#000000',\n    reachfp: 0,\n    progressbar: 0,\n    reqfp: 0,\n    simfp: 0\n  }\n\n  calculateResults = () => {\n    let { remain, overtake, fpwin, curdeposit, levelcost, myfp, bank } = this.state;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(remain)) remain = 0;\n    if (isNaN(overtake)) overtake = 0;\n    if (isNaN(fpwin)) fpwin = 0;\n    if (isNaN(curdeposit)) curdeposit = 0;\n    if (isNaN(levelcost)) levelcost = 0;\n    if (isNaN(myfp)) myfp = 0;\n    if (isNaN(bank)) bank = 0;\n    if (levelcost>0 && curdeposit>0) {\n      this.setState({progressbar: Math.ceil((curdeposit / levelcost)*100)});\n    } else {\n      this.setState({progressbar: 0});\n    }\n    let reachfp = (Math.ceil((remain + overtake) / 2));\n    this.setState({reachfp});\n    // Checking if the player can secure the place\n    // If the player can secure the place then it can be a win, loss or stale on FP spending\n    let simfp;\n    console.clear();\n    if (myfp > (overtake + remain)) {\n      this.setState({\n        msg: 'Your place is already secured you don\\'t need to put any more FP'\n      });\n    } else {\n      for (var inc = 1; inc <= remain; inc++) {\n        simfp = myfp + inc ;\n        if (simfp >= (overtake + (remain - inc))) {\n          if ((simfp === overtake) && (inc === remain )) {\n            this.setState({ msg1: 'You can\\'t secure the place',\n            msgcolor: '#b70431',\n            msg1flag: false\n            });\n            break;\n          } else {\n            this.setState({simfp});\n            this.setState({\n              msg: 'To secure the place, you will need to reach a total of ' + simfp + ' FP'\n            });\n            // Checking for win, loss or stale\n            if (fpwin !==0) {\n              var reqfp = simfp - myfp; // required FP to win\n              this.setState({reqfp});\n              if (fpwin > reqfp) {\n                this.setState({\n                  msg1: 'You will win ' + (fpwin - reqfp) + ' FP on this transaction',\n                  msgcolor: '#177e0e',\n                  msg1flag: true\n                });\n              } else if (fpwin < reqfp) {\n                this.setState({\n                  msg1: 'If you secure the place you will lose ' + (reqfp - fpwin )+ ' FP',\n                  msgcolor: '#b70431',\n                  msg1flag: true\n                });\n              } else {\n                this.setState({\n                  msg1: 'You will not lose or gain any FP if you secure the place',\n                  msgcolor: '#fed029',\n                  msg1flag: true\n                });\n              }\n            }\n            break;\n          }\n        } else if (myfp + remain <= overtake) {\n          this.setState({ msg1: 'You can\\'t secure the place',\n          msgcolor: '#b70431',\n          msg1flag: false\n          });\n          break;\n        }\n      } // For loop\n    }\n    // Checking for inventory and bank additional information\n    if (bank === 0) {\n      this.setState({\n        msg2: 'With 0 FP in the bank the whole amout will need to come from inventory'\n      });\n    } else if (bank >= reqfp) {\n      this.setState({\n        msg2: 'You don\\'t need to take any FP from inventory'\n      });\n    } else {\n      this.setState({\n        msg2: 'You will need to take out ' + (reqfp - bank) + ' FP from inventory'\n      });\n    }\n    if ((reqfp - (bank + fpwin) > 0)) {\n      this.setState({\n        msg3: 'Your inventory will decrease by ' + (reqfp - (bank + fpwin)) + ' FP' ,\n        msg3color: '#b70431',\n        });\n    } else if ((reqfp - (bank + fpwin) === 0)) {\n      this.setState({\n        msg3: 'Your inventory will remain the same' ,\n        msg3color: '#fed029',\n      });\n    } else {\n      if (fpwin !== 0) {\n        var incamount;\n        if (bank >= reqfp) {\n          incamount = fpwin;\n        } else {\n          incamount = (fpwin - (reqfp - bank));\n        }\n        this.setState({\n          msg3: 'Inventory will increase by ' + incamount + ' FP' ,\n          msg3color: '#177e0e',\n        });\n      }\n    }\n  } // calculateResults\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n       * current deposit can't be smaller than (my invested FP + overtake)\n    */\n    this.setState({ msg:'', msg1: '', msg2: '', msg3:'' });\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.curdeposit >= this.state.levelcost) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.setState({ remain: (this.state.levelcost - this.state.curdeposit) }, () => {\n          this.calculateResults()\n        });\n      }\n    });\n  }\n\n  render() {\n    /*   TODO:\n       * Implement tooltips on summary fields (help for usage)\n    */\n    const { classes } = this.props;\n    const { reqfp, simfp, bank, msg, msg1, msg2, msg3 } = this.state;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Secure (Block) place\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.curdeposit}\n                error={this.state.fielderror}\n                name='curdeposit'\n                label='Current deposits'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.levelcost}\n                error={this.state.fielderror}\n                name='levelcost'\n                label='Cost to level GB'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.overtake}\n                name='overtake'\n                label='Player to overtake'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.fpwin}\n                name='fpwin'\n                label='Targeted place reward'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={this.state.myfp}\n                name='myfp'\n                label='My invested FP'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                value={bank}\n                name='bank'\n                label='Amount in the Bank'\n                type='number'\n                fullWidth\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>   { /* Summary  */ }\n              {(this.state.curdeposit!==0 && this.state.levelcost!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='center' >\n                    {this.state.curdeposit} / {this.state.levelcost}\n                  </Typography>\n                  <Line\n                    className={classes.progress}\n                    percent={this.state.progressbar}\n                    strokeLinecap='square'\n                    trailWidth='3'\n                    strokeWidth='3'\n                    strokeColor='#47933f'\n                  />\n                </Fragment>\n              }\n            </Grid>\n            <Grid container spacing={0}>\n              {(!isNaN(this.state.remain) && (this.state.remain!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Remaining FP to level GB:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.remain}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.overtake) && (this.state.overtake!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Nb of FP of player to overtake :\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.overtake}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.fpwin) && (this.state.fpwin!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Targeted place reward:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.fpwin}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(this.state.myfp) && (this.state.myfp!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      My currently invested FP:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {this.state.myfp}\n                    </Typography>\n                  </Grid>\n                </Fragment>\n              }\n              {(!isNaN(bank) && (bank!==0)) &&\n                <Fragment>\n                  <Grid item className={classes.summary} xs={6}>\n                    <Typography variant='body1' align='left' >\n                      Availaible FP in my bank:\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <Typography variant='body1' align='left' >\n                      {bank}\n                  </Typography>\n                  </Grid>\n                </Fragment>\n              }\n            </Grid>   {/* container */}\n            <Grid item xs={12}>   {/* Result */}\n              {((msg !== '') || (msg1!=='')) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Results: </strong>\n                  </Typography>\n                  <Typography variant='body1' align='left' >\n                    {msg}\n                  </Typography>\n                  {(msg1 !== '') &&\n                    <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msgcolor}` }}>{msg1}</span></strong>\n                    </Typography>\n                  }\n                </Fragment>\n              }\n            </Grid>\n            <Grid item xs={12}>   {/* Additional Info */}\n              {(msg1 !== '' && (this.state.msg1flag)) &&\n                <Fragment>\n                  <Typography className={classes.result} variant='body1' align='left' >\n                    <strong>Additional info: </strong>\n                  </Typography>\n                  {(this.state.msg1flag) &&\n                    <Typography variant='body1' align='left'>\n                      You need to invest {reqfp} more FP to reach the required {simfp} FP\n                    </Typography>\n                  }\n                  {(msg2!=='') &&\n                    <Fragment>\n                      <Typography variant='body1' align='left' >\n                        {msg2}\n                      </Typography>\n                      <Typography variant='body1' align='left' >\n                      <strong><span style={{ color: `${this.state.msg3color}` }}>{msg3}</span></strong>\n                      </Typography>\n                    </Fragment>\n                  }\n                </Fragment>\n              }\n            </Grid>\n          </Grid> {/* container */}\n          <Grid container className={classes.infogrid} spacing={0}>\n            <Grid item  xs={1} >\n              <Typography align='center' color='secondary'>\n                <Info />\n              </Typography>\n            </Grid>\n            <Grid item xs={11} >\n              <Typography align='left' color='secondary'>\n                It is assumed that the player has not used any FP from inventory previously\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Blockplace);","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Fasttrack extends Component {\n  state = {\n    bonus: 1.8,\n    totfpreq: 0,\n    reward1st: 0,\n    reward2nd: 0,\n    reward3rd: 0,\n    teamcont1: 0,\n    teamcont2: 0,\n    teamcont3: 0,\n    owncont1: 0,\n    owncont2: 0,\n    owncont3: 0,\n    remain1st: 0,\n    remain2nd: 0,\n    remain3rd: 0,\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    summessage: '',\n    fielderror: false,\n    msgcolor: '#000000',\n  }\n\n\n  calculateResults = () => {\n    let { bonus, totfpreq, reward1st, reward2nd, reward3rd } = this.state;\n    var teamcont1, owncont1, remain1st;\n    var teamcont2, owncont2, remain2nd;\n    var teamcont3, owncont3, remain3rd;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(totfpreq)) totfpreq = 0;\n    if (isNaN(reward1st)) reward1st = 0;\n    if (isNaN(reward2nd)) reward2nd = 0;\n    if (isNaN(reward3rd)) reward3rd = 0;\n    // Resetting all messages\n    this.setState({ msg1: '', msg2:'', msg3:'', summessage: '' })\n    if (reward1st>0) {\n      teamcont1 = Math.ceil(reward1st * bonus);\n      owncont1 = Math.max(0, (totfpreq - (2 * teamcont1)));\n      remain1st = totfpreq - (teamcont1 + owncont1);\n      let effi = Math.ceil((owncont1 / totfpreq) * 100)\n      let message = '1st place:  Myself=' + owncont1 + ',   Guildmate=' + teamcont1 + ',    Remaining FP=' + remain1st;\n      let summessage = 'With only 1st place open the total contribution by owner will be ' + owncont1 + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain1st + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont1: teamcont1, owncont1: owncont1, remain1st: remain1st, msg1: message, summessage: summessage });\n    }\n    if (reward2nd>0) {\n      teamcont2 = Math.ceil(reward2nd * bonus);\n      owncont2 = Math.max(0, (remain1st - (2 * teamcont2)));\n      remain2nd = remain1st - (teamcont2 + owncont2);\n      let totcont = owncont1 + owncont2;\n      let effi = Math.ceil((totcont / totfpreq) * 100)\n      let message = '2nd place:  Myself=' + owncont2 + ',  Guildmate=' + teamcont2 + ',  Remaining FP=' + remain2nd;\n      let summessage = 'With 1st and 2nd places open the total contribution by owner will be ' + totcont + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain2nd + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont2: teamcont2, owncont2: owncont2, remain2nd: remain2nd, msg2: message, summessage: summessage });\n    }\n    if (reward3rd>0) {\n      teamcont3 = Math.ceil(reward3rd * bonus);\n      owncont3 = Math.max(0, (remain2nd - (2 * teamcont3)));\n      remain3rd = remain2nd - (teamcont3 + owncont3);\n      let totcont = owncont1 + owncont2 + owncont3;\n      let effi = Math.ceil((totcont / totfpreq) * 100)\n      let message = '3rd place:  Myself=' + owncont3 + ',  Guildmate=' + teamcont3 + ',  Remaining FP=' + remain3rd;\n      let summessage = 'With 1st, 2nd and 3rd places open the total contribution by owner will be ' + totcont + ' FP (' + effi + '% of total).'\n      summessage += ' There would still be ' + remain3rd + ' FP remaining which could be filled using normal swap threads.'\n      this.setState({ teamcont3: teamcont3, owncont3: owncont3, remain3rd: remain3rd, msg3: message, summessage: summessage });\n    }\n  }\n\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.reward1st >= this.state.totfpreq) {\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.calculateResults();\n\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                GB FastTrack Version 1\n              </Typography><br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n               Owner must make their contribution BEFORE posting and contribution must be direct from their supplies/collections (not from swap threads)\n              </Typography>\n              <Typography className={classes.info2} variant='subtitle2'>\n                If you are not familiar with GB FastTrack process read explantion on the guild forum.\n              </Typography><br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={this.state.totfpreq}\n                error={this.state.fielderror}\n                name='totfpreq'\n                label='Total FP required'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward1st}\n                error={this.state.fielderror}\n                name='reward1st'\n                label='1st place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward2nd}\n                name='reward2nd'\n                label='2nd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                value={this.state.reward3rd}\n                name='reward3rd'\n                label='3rd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"right\">Rewards</TableCell>\n                        <TableCell align=\"right\">Guild contrib</TableCell>\n                        <TableCell align=\"right\">Owner contrib</TableCell>\n                        <TableCell align=\"right\">Remain FP to level</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableHead>\n                <TableBody>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">1st place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward1st}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont1}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont1}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain1st}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">2nd place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward2nd}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont2}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont2}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain2nd}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">3rd place</TableCell>\n                        <TableCell align=\"right\">{this.state.reward3rd}</TableCell>\n                        <TableCell align=\"right\">{this.state.teamcont3}</TableCell>\n                        <TableCell align=\"right\">{this.state.owncont3}</TableCell>\n                        <TableCell align=\"right\">{this.state.remain3rd}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableBody>\n              </Table>\n            </Grid>\n\n            <Grid item xs={12}>\n              {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                !isNaN(this.state.reward1st) && this.state.reward1st!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography>{this.state.summessage}</Typography>\n                  <Typography className={classes.result}>\n                  Copy and paste the following into the guild 1.8 thread after posting your GB\n                  </Typography>\n                  <Typography className={classes.info2}>\n                    I am opening the following places on my GB posted above:\n                    <br></br>\n                    &nbsp;&nbsp;{this.state.msg1}<br></br>\n                    &nbsp;&nbsp;{this.state.msg2}<br></br>\n                    &nbsp;&nbsp;{this.state.msg3}<br></br>\n                  </Typography>\n                </Fragment>\n              }\n            </Grid>\n\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Contributions are all based on 1.8 rate (Arc 60+ required to make profit). Figures will be correct only for GBs that are clear of FPs when starting.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Fasttrack);","import React, { Component, Fragment } from 'react';\n\nimport { Paper, Typography, TextField, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nclass Fasttrackng extends Component {\n  state = {\n    bonus: 1.8,\n    totfpreq: 0,\n    reward1st: 0,\n    reward2nd: 0,\n    reward3rd: 0,\n    reward4th: 0,\n    paybyp1: 0,\n    paybyp2: 0,\n    paybyp3: 0,\n    paybyp4: 0,\n    rewardarc1: 0,\n    rewardarc2: 0,\n    rewardarc3: 0,\n    rewardarc4: 0,\n    lossp1: 0,\n    lossp2: 0,\n    lossp3: 0,\n    lossp4: 0,\n    payowner1: 0,\n    payowner2: 0,\n    payowner3: 0,\n    payowner4: 0,\n    gainp1: 0,\n    gainp2: 0,\n    gainp3: 0,\n    gainp4: 0,\n    msg1: '',\n    msg2: '',\n    msg3: '',\n    msg4: '',\n    summessage: '',\n    fielderror: false,\n    msgcolor: '#000000',\n  }\n\n\n  calculateResults = () => {\n    let { bonus, totfpreq, reward1st, reward2nd, reward3rd, reward4th } = this.state;\n    var paybyp1, rewardarc1, lossp1, payowner1, gainp1;\n    var paybyp2, rewardarc2, lossp2, payowner2, gainp2;\n    var paybyp3, rewardarc3, lossp3, payowner3, gainp3;\n    var paybyp4, rewardarc4, lossp4, payowner4, gainp4;\n    // Taking into account user blanking the field (backspace)\n    if (isNaN(totfpreq)) totfpreq = 0;\n    if (isNaN(reward1st)) reward1st = 0;\n    if (isNaN(reward2nd)) reward2nd = 0;\n    if (isNaN(reward3rd)) reward3rd = 0;\n    if (isNaN(reward4th)) reward4th = 0;\n    // Resetting all messages\n    this.setState({ msg1: '', msg2:'', msg3:'', summessage: '' })\n    if (reward1st>0) {\n      rewardarc1 = Math.ceil(reward1st * bonus);\n      paybyp1 = Math.ceil(totfpreq / 2);\n      lossp1 = paybyp1 - rewardarc1;\n      if (paybyp1 < rewardarc1) { lossp1 = 0}; // Taking into account Arc reward is greater than what p1 pays in\n      payowner1 = Math.ceil(1.3 * lossp1);\n      gainp1 = payowner1 - lossp1;\n      if (payowner1 === 0) { gainp1 = rewardarc1 - paybyp1 };\n      let message = '1st:  Guildmate=' + paybyp1 + ' (Arc≈' + rewardarc1 + ', Tot profit≈' + gainp1 + '),   I\\'ll pay you back=' + payowner1 + '.';\n      let effi = Math.ceil((payowner1 / totfpreq) * 100);\n      let tolevel = totfpreq - paybyp1\n      let summessage = 'With only 1st place open, the total contribution by owner will be ' + payowner1 + ' FP (' + effi + '% of total required FP). The total FP remaining to level the BG will be ' + tolevel + '.';\n      this.setState({ rewardarc1: rewardarc1, paybyp1: paybyp1, lossp1: lossp1, payowner1: payowner1, gainp1: gainp1, msg1: message, summessage: summessage });\n    }\n\n    if (reward2nd>0) {\n      rewardarc2 = Math.ceil(reward2nd * bonus);\n      paybyp2 = Math.ceil(paybyp1 / 2);\n      lossp2 = paybyp2 - rewardarc2;\n      if (paybyp2 < rewardarc2) { lossp2 = 0};\n      payowner2 = Math.ceil(1.3 * lossp2);\n      gainp2 = payowner2 - lossp2;\n      if (payowner2 === 0) { gainp2 = rewardarc2 - paybyp2 };\n      let message = '2nd:  Guildmate=' + paybyp2 + ' (Arc≈' + rewardarc2 + ', Tot profit≈' + gainp2 + '),   I\\'ll pay you back=' + payowner2 + '.';\n      let totpayowner = payowner1 + payowner2;\n      let tolevel = totfpreq - (paybyp1 + paybyp2);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st and 2nd place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the BG will be ' + tolevel + '.';\n      this.setState({ rewardarc2: rewardarc2, paybyp2: paybyp2, lossp2: lossp2, payowner2: payowner2, gainp2: gainp2, msg2: message, summessage: summessage  });\n    }\n\n    if (reward3rd>0) {\n      rewardarc3 = Math.ceil(reward3rd * bonus);\n      paybyp3 = Math.ceil(paybyp2 / 2);\n      lossp3 = paybyp3 - rewardarc3;\n      if (paybyp3 < rewardarc3) { lossp3 = 0};\n      payowner3 = Math.ceil(1.1 * lossp3);\n      gainp3 = payowner3 - lossp3;\n      if (payowner3 === 0) { gainp3 = rewardarc3 - paybyp3 };\n      let message = '3rd:  Guildmate=' + paybyp3 + ' (Arc≈' + rewardarc3 + ', Tot profit≈' + gainp3 + '),   I\\'ll pay you back=' + payowner3 + '.';\n      let totpayowner = payowner1 + payowner2 + payowner3;\n      let tolevel = totfpreq - ( paybyp1 + paybyp2 + paybyp3);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st, 2nd and 3rd place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the BG will be ' + tolevel + '.';\n      this.setState({ rewardarc3: rewardarc3, paybyp3: paybyp3, lossp3: lossp3, payowner3: payowner3, gainp3: gainp3, msg3: message, summessage: summessage });\n    }\n\n    if (reward4th>0) {\n      rewardarc4 = Math.ceil(reward4th * bonus);\n      paybyp4 = Math.ceil(paybyp3 / 2);\n      lossp4 = paybyp4 - rewardarc4;\n      if (paybyp4 < rewardarc4) { lossp4 = 0};\n      payowner4 = Math.ceil(1.1 * lossp4);\n      gainp4 = payowner4 - lossp4;\n      if (payowner4 === 0) { gainp4 = rewardarc4 - paybyp4 };\n      let message = '4th:  Guildmate=' + paybyp4 + ' (Arc≈' + rewardarc4 + ',Tot profit≈' + gainp4 + '),   I\\'ll pay you back=' + payowner4 + '.';\n      let totpayowner = payowner1 + payowner2 + payowner3 + payowner4;\n      let tolevel = totfpreq - (paybyp1 + paybyp2 + paybyp3 + paybyp4);\n      let effi = Math.ceil(( totpayowner / totfpreq) * 100);\n      let summessage = 'With 1st, 2nd, 3rd and 4th place open, the total contribution by owner will be ' + totpayowner + ' FP (' + effi + '% of total required FP). The total FP remaining to level the BG will be ' + tolevel + '.';\n      this.setState({ rewardarc4: rewardarc4, paybyp4: paybyp4, lossp4: lossp4, payowner4: payowner4, gainp4: gainp4, msg4: message, summessage: summessage });\n    }\n  }\n\n\n  handleChange = (event) => {\n    /*   TODO:\n       * nb for player to overtake can't be above level cost\n       * nb for player to overtake can't be above current deposit\n    */\n    const { name, value } = event.target;\n    let intValue = parseInt(value, 10);\n    if (intValue < 0) intValue = 0;\n    this.setState({\n      [name]: intValue\n    }, () => {\n      if (this.state.reward1st >= this.state.totfpreq) {\n        console.log('Inside IF');\n        this.setState({ fielderror: true });\n      } else {\n        this.setState({ fielderror: false });\n        this.calculateResults();\n\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                GB FastTrack Version 2\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n                <p fontStyle=\"italic\">This is the second version of the FastTrack process </p>\n              </Typography>\n              <Typography className={classes.info2} variant='subtitle2'>\n                If you are not familiar with GB FastTrack process read explantion on the guild forum.\n              </Typography><br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={this.state.totfpreq}\n                error={this.state.fielderror}\n                name='totfpreq'\n                label='Total FP required'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward1st}\n                error={this.state.fielderror}\n                name='reward1st'\n                label='1st place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward2nd}\n                name='reward2nd'\n                label='2nd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward3rd}\n                name='reward3rd'\n                label='3rd place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                value={this.state.reward4th}\n                name='reward4th'\n                label='4th place reward'\n                type='number'\n                margin='normal'\n                onChange={this.handleChange}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <br></br>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"center\">Rewards</TableCell>\n                        <TableCell align=\"center\">Player pays in</TableCell>\n                        <TableCell align=\"center\">Owner pays back</TableCell>\n                        <TableCell align=\"center\">Player profit</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableHead>\n                <TableBody>\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">1st place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward1st}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp1}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner1}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp1}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">2nd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward2nd}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp2}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner2}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp2}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">3rd place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward3rd}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp3}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner3}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp3}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                  {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                    !isNaN(this.state.reward1st) && this.state.reward1st!==0 &&\n                    !isNaN(this.state.reward2nd) && this.state.reward2nd!==0 &&\n                    !isNaN(this.state.reward3rd) && this.state.reward3rd!==0 &&\n                    !isNaN(this.state.reward4th) && this.state.reward4th!==0) &&\n                    <Fragment>\n                      <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">4th place</TableCell>\n                        <TableCell align=\"center\">{this.state.reward4th}</TableCell>\n                        <TableCell align=\"center\">{this.state.paybyp4}</TableCell>\n                        <TableCell align=\"center\">{this.state.payowner4}</TableCell>\n                        <TableCell align=\"center\">{this.state.gainp4}</TableCell>\n                      </TableRow>\n                    </Fragment>\n                  }\n                </TableBody>\n              </Table>\n            </Grid>\n\n            <Grid item xs={12}>\n              {(!isNaN(this.state.totfpreq) && this.state.totfpreq!==0 &&\n                !isNaN(this.state.reward1st) && this.state.reward1st!==0 && this.state.fielderror===false) &&\n                <Fragment>\n                  <br></br>\n                  <Typography variant='body1' align='left' >\n                    <strong>Summary: </strong>\n                  </Typography>\n                  <Typography>{this.state.summessage}</Typography>\n                  <Typography className={classes.result}>\n                    <strong>Copy and paste the following into one of the guild \"Fast track\" thread after posting your GB</strong>\n                  </Typography>\n                  <Typography className={classes.info2}>\n                    I am opening the following places on my GB posted above:\n                    <br></br>\n                    {(this.state.msg1!=='') && <Typography>&nbsp;&nbsp;{this.state.msg1}<br></br></Typography>}\n                    {(this.state.msg2!=='') && <Typography>&nbsp;&nbsp;{this.state.msg2}<br></br></Typography>}\n                    {(this.state.msg3!=='') && <Typography>&nbsp;&nbsp;{this.state.msg3}<br></br></Typography>}\n                    {(this.state.msg4!=='') && <Typography>&nbsp;&nbsp;{this.state.msg4}<br></br></Typography>}\n                    <p><strong>NOTE:</strong> If your Arc level is greater than 60, \"Tot profit\" figures shown above might be slightly higher.</p>\n                    <p>Please state which place you take and on which GB you want me to pay you back.</p>\n\n                  </Typography>\n                </Fragment>\n              }\n            </Grid>\n\n          </Grid> {/* container */}\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Contributions are all based on 1.8 rate (Arc 60+ required to make profit). Numbers will be correct only if no one else outside interfere with the deals.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Fasttrackng);","import React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n    track: {\n        width: '95%',\n        height: 20,\n        background: '#777',\n        borderRadius: 10,\n        boxShadow: '0 3px 5px 2px rgba(191, 191, 191, .3)'\n    },\n    filling: {\n        width: props => props.percentage,\n        height: '100%',\n        background: '#1e88e5',\n        borderRadius: 8,\n    }\n  });\n\n\nfunction ProgressBar(props) {\n    const classes = useStyles(props);\n        return (\n            <div className={classes.track}>\n                <div className={classes.filling}></div>\n            </div>\n        )\n    };\n\n\nexport default ProgressBar;\n\n","import React, { Component, } from 'react';\n\nimport { PieChart, Pie, Legend, Cell, Tooltip, ResponsiveContainer, Sector,\n  Label, LabelList } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nimport { Paper, Typography, Grid } from '@material-ui/core';\n// import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Info from '@material-ui/icons/Info';\nimport ProgressBar from './Progressbar';\n\n\nconst colors = scaleOrdinal(schemeCategory10).range();\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n  // console.log(props);\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{` Count: ${value}`}</text>\n      <text x={0} y={20}>{` ${(percent * 100).toFixed(2)}%`}</text>\n    </g>\n  );\n};\n\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2 * 2))]: {\n      width: 650,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3 * 2))]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  result: {\n    marginTop: 30\n  },\n  info: {\n    marginTop: 20\n  },\n  info2: {\n    marginTop: 5\n  },\n  progress: {\n    marginBottom: 15\n  },\n  icon: {\n    verticalAlign: 'middle'\n  }\n});\n\n\nexport class ArcGraph extends Component {\n  static displayName = 'Arc Donut';\n  state = {\n    activeIndex: 0,\n    animation: true,\n  };\n  render () {\n    const arc_data = this.props.arc_data;\n    return (\n      <div className=\"pie-charts\">\n        <div className=\"pie-chart-wrapper\">\n          <PieChart width={560} height={370}>\n            <Legend paylodUniqBy/>\n            <Pie\n              data={arc_data}\n              dataKey=\"value\"\n              cx={250}\n              cy={200}\n              startAngle={180}\n              endAngle={-180}\n              innerRadius={60}\n              outerRadius={90}\n              label={renderLabelContent}\n              paddingAngle={1}\n              isAnimationActive={this.state.animation}\n            >\n              {\n                arc_data.map((entry, index) => (\n                  <Cell key={`slice-${index}`} fill={colors[index % 10]}/>\n                ))\n              }\n              <Label width={50} position=\"center\">\n                Arc Status\n              </Label>\n            </Pie>\n          </PieChart>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass Arcstasts extends Component {\n  state = {\n    isLoaded: false,\n    players: [],\n    stats: [],\n    players_arc: [],\n    players_arc60: [],\n    players_arc80: [],\n    arc_data: [],\n    pcnt_player_tot: '',\n    pcnt_player_inac: '',\n    nb_player_tot: 0,\n    nb_player_inac: 0\n  }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/fabou78/forgecalc/players')\n      .then(response => response.json())\n      .then(\n        (result) => {\n          // console.log(result);\n          var my_arc_list = [];\n          var my_arc_list60 =[];\n          var my_arc_list80 = [];\n          result.forEach(element => {\n            if (element.Arc < 60) my_arc_list.push(element.Name);\n            if (59 < element.Arc && element.Arc < 80) my_arc_list60.push(element.Name);\n            if (element.Arc > 79) my_arc_list80.push(element.Name);\n          });\n          this.setState({\n            isLoaded: true,\n            players_arc: my_arc_list,\n            players_arc60: my_arc_list60,\n            players_arc80: my_arc_list80,\n            players: result\n          })\n        });\n    fetch('https://my-json-server.typicode.com/fabou78/forgecalc/stats')\n      .then(response => response.json())\n      .then(\n        (result) => {\n          var percent1 = (Math.round((result[0].stat / 80) * 100)).toString() + '%';\n          var nbplay = result[0].stat;\n          var nbinac = result[1].stat;\n          var nbactive = nbplay - nbinac\n          var percent2 = (Math.round((nbactive / nbplay) * 100)).toString() + '%';\n          var arc_tot = result[2].stat;\n          var percent3 = (Math.round((arc_tot / nbactive) * 100)).toString() + '%';\n          var arc_60 = result[3].stat;\n          var arc_80 = result[4].stat;\n          var arc_data =[];\n          var no_arc = nbactive - arc_tot\n          var low_arc = arc_tot - arc_60 - arc_80\n          arc_data.push({ name: 'Arc level > 59', value: arc_60 });\n          arc_data.push({ name: 'Arc level < 60', value: low_arc });\n          arc_data.push({ name: 'Arc level > 79', value: arc_80 });\n          arc_data.push({ name: 'No Arc', value: no_arc});\n          this.setState({\n            isLoaded: true,\n            stats: result,\n            pcnt_player_tot: percent1,\n            pcnt_player_ac: percent2,\n            pcnt_arc: percent3,\n            nb_player_tot: nbplay,\n            nb_player_ac: nbactive,\n            nb_arc: arc_tot,\n            arc_data: arc_data\n          })\n        });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { pcnt_player_tot, pcnt_player_ac, pcnt_arc, nb_arc, nb_player_ac, nb_player_tot, players_arc, players_arc60, players_arc80 } = this.state;\n    return (\n      <div className={classes.layout}>\n        <Paper className={classes.paper} elevation={4}>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Typography variant='h4' align='center' color='primary'>\n                Guild Arc Statistics\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle2'>\n                <p fontStyle=\"italic\">A quick look at the Arc situation in the guild... </p>\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <p>Total number of Players : <strong>{nb_player_tot} / 80 </strong>({pcnt_player_tot})\n              <ProgressBar percentage={pcnt_player_tot} /></p>\n            </Grid>\n\n            <Grid item xs={12}>\n              <p>Number of active Players (last 48 hours) : <strong>{nb_player_ac} / {nb_player_tot} </strong>({pcnt_player_ac})\n              <ProgressBar percentage={pcnt_player_ac} /></p>\n            </Grid>\n\n            <Grid item xs={12}>\n              <p>Number of Arc Owners: <strong>{nb_arc} / {nb_player_ac} </strong>({pcnt_arc})\n              <ProgressBar percentage={pcnt_arc} /></p>\n            </Grid>\n\n            <Grid item xs={12}>\n            <Typography variant='h6' color='primary'>\n              <br></br>\n              Arc distribution\n              </Typography>\n              <ArcGraph arc_data={this.state.arc_data} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant='h6' color='primary'>\n                <br></br>\n                Players with Arc @ 80+\n              </Typography>\n              <ul>{players_arc80.map(arc => <li>{arc}</li>)}</ul>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant='h6' color='primary'>\n                Players with Arc @ 60+ (and lower then 80)\n              </Typography>\n              <ul>{players_arc60.map(arc => <li>{arc}</li>)}</ul>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant='h6' color='primary'>\n                Players with Arc lower than 60\n              </Typography>\n              <ul>{players_arc.map(arc => <li>{arc}</li>)}</ul>\n            </Grid>\n\n\n\n          </Grid> {/* container */}\n\n          <Grid container spacing={0} direction='row' justify='flex-start'>\n            <Grid item className={classes.info} xs={12} >\n              <Typography color='secondary'>\n                <Info className={classes.icon} />\n                <span className={classes.icon}>\n                  &nbsp;Inactive players are ignored in Arc statistics.\n                </span>\n              </Typography>\n            </Grid>\n          </Grid> { /* container */ }\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Arcstasts);","import React, { Component, Fragment } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors'\n\nimport Profit from './components/Profit';\nimport Navbar from './components/Navbar';\nimport Blockplace from './components/Blockplace';\nimport Fasttrack from './components/Fasttrack';\nimport Fasttrackng from './components/Fasttrack_ng';\nimport Arcstasts from './components/Arcstats';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: { main: pink[400] },\n    primary: { main: blue[600] },\n  },\n  typography: {\n    useNextVariants: true,\n }\n});\n\n\nclass App extends Component {\n  state = {\n    loadpage: 'secure'\n  }\n\n  handleClick = (event) => {\n    const { name } = event.currentTarget;\n    if (name === 'secure') {\n      this.setState({ loadpage: 'secure' });\n    };\n    if (name === 'profit') {\n      this.setState({ loadpage: 'profit' });\n    };\n    if (name === 'fasttk') {\n      this.setState({ loadpage: 'fasttk' });\n    };\n    if (name === 'fastng') {\n      this.setState({ loadpage: 'fastng' });\n    };\n    if (name === 'arcstats') {\n      this.setState({ loadpage: 'arcstats' });\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Navbar handleClick={this.handleClick} />\n          { (this.state.loadpage === 'secure') &&\n            <Blockplace />\n          }\n          { (this.state.loadpage === 'profit') &&\n            <Profit />\n          }\n          { (this.state.loadpage === 'fasttk') &&\n            <Fasttrack />\n          }\n          { (this.state.loadpage === 'fastng') &&\n            <Fasttrackng />\n          }\n          { (this.state.loadpage === 'arcstats') &&\n            <Arcstasts />\n          }\n        </MuiThemeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}